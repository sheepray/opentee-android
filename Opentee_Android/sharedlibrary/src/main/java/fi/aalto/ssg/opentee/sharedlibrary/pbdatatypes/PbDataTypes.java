// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GPDataTypes.proto

package fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes;

public final class PbDataTypes {
  private PbDataTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TeecContextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecContext)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 mContext = 1;</code>
     */
    boolean hasMContext();
    /**
     * <code>required int32 mContext = 1;</code>
     */
    int getMContext();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecContext}
   */
  public static final class TeecContext extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecContext)
      TeecContextOrBuilder {
    // Use ITeecContext.newBuilder() to construct.
    private TeecContext(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecContext(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecContext defaultInstance;
    public static TeecContext getDefaultInstance() {
      return defaultInstance;
    }

    public TeecContext getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecContext(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mContext_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecContext.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecContext> PARSER =
        new com.google.protobuf.AbstractParser<TeecContext>() {
      public TeecContext parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecContext(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecContext> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MCONTEXT_FIELD_NUMBER = 1;
    private int mContext_;
    /**
     * <code>required int32 mContext = 1;</code>
     */
    public boolean hasMContext() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 mContext = 1;</code>
     */
    public int getMContext() {
      return mContext_;
    }

    private void initFields() {
      mContext_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMContext()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mContext_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mContext_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecContext prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecContext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecContext)
        TeecContextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecContext.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.PbDataTypes.ITeecContext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mContext_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_descriptor;
      }

      public TeecContext getDefaultInstanceForType() {
        return TeecContext.getDefaultInstance();
      }

      public TeecContext build() {
        TeecContext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecContext buildPartial() {
        TeecContext result = new TeecContext(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mContext_ = mContext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecContext) {
          return mergeFrom((TeecContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecContext other) {
        if (other == TeecContext.getDefaultInstance()) return this;
        if (other.hasMContext()) {
          setMContext(other.getMContext());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMContext()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecContext parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecContext) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mContext_ ;
      /**
       * <code>required int32 mContext = 1;</code>
       */
      public boolean hasMContext() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 mContext = 1;</code>
       */
      public int getMContext() {
        return mContext_;
      }
      /**
       * <code>required int32 mContext = 1;</code>
       */
      public Builder setMContext(int value) {
        bitField0_ |= 0x00000001;
        mContext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mContext = 1;</code>
       */
      public Builder clearMContext() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mContext_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecContext)
    }

    static {
      defaultInstance = new TeecContext(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecContext)
  }

  public interface TeecOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 mStarted = 1;</code>
     */
    boolean hasMStarted();
    /**
     * <code>required int32 mStarted = 1;</code>
     */
    int getMStarted();

    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    boolean hasMParams();
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    TeecParameter getMParams();
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    TeecParameterOrBuilder getMParamsOrBuilder();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecOperation}
   */
  public static final class TeecOperation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecOperation)
      TeecOperationOrBuilder {
    // Use TeecOperation.newBuilder() to construct.
    private TeecOperation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecOperation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecOperation defaultInstance;
    public static TeecOperation getDefaultInstance() {
      return defaultInstance;
    }

    public TeecOperation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecOperation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mStarted_ = input.readInt32();
              break;
            }
            case 18: {
              TeecParameter.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = mParams_.toBuilder();
              }
              mParams_ = input.readMessage(TeecParameter.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mParams_);
                mParams_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecOperation.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecOperation> PARSER =
        new com.google.protobuf.AbstractParser<TeecOperation>() {
      public TeecOperation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecOperation(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecOperation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MSTARTED_FIELD_NUMBER = 1;
    private int mStarted_;
    /**
     * <code>required int32 mStarted = 1;</code>
     */
    public boolean hasMStarted() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 mStarted = 1;</code>
     */
    public int getMStarted() {
      return mStarted_;
    }

    public static final int MPARAMS_FIELD_NUMBER = 2;
    private TeecParameter mParams_;
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public boolean hasMParams() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public TeecParameter getMParams() {
      return mParams_;
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public TeecParameterOrBuilder getMParamsOrBuilder() {
      return mParams_;
    }

    private void initFields() {
      mStarted_ = 0;
      mParams_ = TeecParameter.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMStarted()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMParams()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMParams().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mStarted_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, mParams_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mStarted_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mParams_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecOperation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecOperation)
        TeecOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecOperation.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.PbDataTypes.TeecOperation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMParamsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mStarted_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (mParamsBuilder_ == null) {
          mParams_ = TeecParameter.getDefaultInstance();
        } else {
          mParamsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_descriptor;
      }

      public TeecOperation getDefaultInstanceForType() {
        return TeecOperation.getDefaultInstance();
      }

      public TeecOperation build() {
        TeecOperation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecOperation buildPartial() {
        TeecOperation result = new TeecOperation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mStarted_ = mStarted_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (mParamsBuilder_ == null) {
          result.mParams_ = mParams_;
        } else {
          result.mParams_ = mParamsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecOperation) {
          return mergeFrom((TeecOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecOperation other) {
        if (other == TeecOperation.getDefaultInstance()) return this;
        if (other.hasMStarted()) {
          setMStarted(other.getMStarted());
        }
        if (other.hasMParams()) {
          mergeMParams(other.getMParams());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMStarted()) {
          
          return false;
        }
        if (!hasMParams()) {
          
          return false;
        }
        if (!getMParams().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecOperation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecOperation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mStarted_ ;
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public boolean hasMStarted() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public int getMStarted() {
        return mStarted_;
      }
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public Builder setMStarted(int value) {
        bitField0_ |= 0x00000001;
        mStarted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public Builder clearMStarted() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mStarted_ = 0;
        onChanged();
        return this;
      }

      private TeecParameter mParams_ = TeecParameter.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecParameter, TeecParameter.Builder, TeecParameterOrBuilder> mParamsBuilder_;
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public boolean hasMParams() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameter getMParams() {
        if (mParamsBuilder_ == null) {
          return mParams_;
        } else {
          return mParamsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder setMParams(TeecParameter value) {
        if (mParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mParams_ = value;
          onChanged();
        } else {
          mParamsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder setMParams(
          TeecParameter.Builder builderForValue) {
        if (mParamsBuilder_ == null) {
          mParams_ = builderForValue.build();
          onChanged();
        } else {
          mParamsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder mergeMParams(TeecParameter value) {
        if (mParamsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              mParams_ != TeecParameter.getDefaultInstance()) {
            mParams_ =
              TeecParameter.newBuilder(mParams_).mergeFrom(value).buildPartial();
          } else {
            mParams_ = value;
          }
          onChanged();
        } else {
          mParamsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder clearMParams() {
        if (mParamsBuilder_ == null) {
          mParams_ = TeecParameter.getDefaultInstance();
          onChanged();
        } else {
          mParamsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameter.Builder getMParamsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMParamsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameterOrBuilder getMParamsOrBuilder() {
        if (mParamsBuilder_ != null) {
          return mParamsBuilder_.getMessageOrBuilder();
        } else {
          return mParams_;
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecParameter, TeecParameter.Builder, TeecParameterOrBuilder>
          getMParamsFieldBuilder() {
        if (mParamsBuilder_ == null) {
          mParamsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecParameter, TeecParameter.Builder, TeecParameterOrBuilder>(
                  getMParams(),
                  getParentForChildren(),
                  isClean());
          mParams_ = null;
        }
        return mParamsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecOperation)
    }

    static {
      defaultInstance = new TeecOperation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecOperation)
  }

  public interface TeecParameterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
     */
    boolean hasTeecRegisteredMemoryReference();
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
     */
    TeecRegisteredMemoryReference getTeecRegisteredMemoryReference();
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
     */
    TeecRegisteredMemoryReferenceOrBuilder getTeecRegisteredMemoryReferenceOrBuilder();

    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
     */
    boolean hasTeecTempMemoryReference();
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
     */
    TeecTempMemoryReference getTeecTempMemoryReference();
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
     */
    TeecTempMemoryReferenceOrBuilder getTeecTempMemoryReferenceOrBuilder();

    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    boolean hasTeecValue();
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    TeecValue getTeecValue();
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    TeecValueOrBuilder getTeecValueOrBuilder();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter}
   */
  public static final class TeecParameter extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter)
      TeecParameterOrBuilder {
    // Use TeecParameter.newBuilder() to construct.
    private TeecParameter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecParameter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecParameter defaultInstance;
    public static TeecParameter getDefaultInstance() {
      return defaultInstance;
    }

    public TeecParameter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecParameter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              TeecRegisteredMemoryReference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = teecRegisteredMemoryReference_.toBuilder();
              }
              teecRegisteredMemoryReference_ = input.readMessage(TeecRegisteredMemoryReference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teecRegisteredMemoryReference_);
                teecRegisteredMemoryReference_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              TeecTempMemoryReference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = teecTempMemoryReference_.toBuilder();
              }
              teecTempMemoryReference_ = input.readMessage(TeecTempMemoryReference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teecTempMemoryReference_);
                teecTempMemoryReference_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              TeecValue.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = teecValue_.toBuilder();
              }
              teecValue_ = input.readMessage(TeecValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teecValue_);
                teecValue_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecParameter.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecParameter> PARSER =
        new com.google.protobuf.AbstractParser<TeecParameter>() {
      public TeecParameter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecParameter(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecParameter> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TEEC_VALUE_INPUT = 1;</code>
       */
      TEEC_VALUE_INPUT(0, 1),
      /**
       * <code>TEEC_VALUE_OUTPUT = 2;</code>
       */
      TEEC_VALUE_OUTPUT(1, 2),
      /**
       * <code>TEEC_VALUE_INOUT = 3;</code>
       */
      TEEC_VALUE_INOUT(2, 3),
      /**
       * <code>TEEC_MEMREF_TMP_INPUT = 4;</code>
       */
      TEEC_MEMREF_TMP_INPUT(3, 4),
      /**
       * <code>TEEC_MEMREF_TMP_OUTPUT = 5;</code>
       */
      TEEC_MEMREF_TMP_OUTPUT(4, 5),
      /**
       * <code>TEEC_MEMREF_TMP_INOUT = 6;</code>
       */
      TEEC_MEMREF_TMP_INOUT(5, 6),
      /**
       * <code>TEEC_MEMREF_WHOLE = 7;</code>
       */
      TEEC_MEMREF_WHOLE(6, 7),
      /**
       * <code>TEEC_MEMREF_PARTIAL_INPUT = 8;</code>
       */
      TEEC_MEMREF_PARTIAL_INPUT(7, 8),
      /**
       * <code>TEEC_MEMREF_PARTIAL_OUTPUT = 9;</code>
       */
      TEEC_MEMREF_PARTIAL_OUTPUT(8, 9),
      /**
       * <code>TEEC_MEMREF_PARTIAL_INOUT = 10;</code>
       */
      TEEC_MEMREF_PARTIAL_INOUT(9, 10),
      ;

      /**
       * <code>TEEC_VALUE_INPUT = 1;</code>
       */
      public static final int TEEC_VALUE_INPUT_VALUE = 1;
      /**
       * <code>TEEC_VALUE_OUTPUT = 2;</code>
       */
      public static final int TEEC_VALUE_OUTPUT_VALUE = 2;
      /**
       * <code>TEEC_VALUE_INOUT = 3;</code>
       */
      public static final int TEEC_VALUE_INOUT_VALUE = 3;
      /**
       * <code>TEEC_MEMREF_TMP_INPUT = 4;</code>
       */
      public static final int TEEC_MEMREF_TMP_INPUT_VALUE = 4;
      /**
       * <code>TEEC_MEMREF_TMP_OUTPUT = 5;</code>
       */
      public static final int TEEC_MEMREF_TMP_OUTPUT_VALUE = 5;
      /**
       * <code>TEEC_MEMREF_TMP_INOUT = 6;</code>
       */
      public static final int TEEC_MEMREF_TMP_INOUT_VALUE = 6;
      /**
       * <code>TEEC_MEMREF_WHOLE = 7;</code>
       */
      public static final int TEEC_MEMREF_WHOLE_VALUE = 7;
      /**
       * <code>TEEC_MEMREF_PARTIAL_INPUT = 8;</code>
       */
      public static final int TEEC_MEMREF_PARTIAL_INPUT_VALUE = 8;
      /**
       * <code>TEEC_MEMREF_PARTIAL_OUTPUT = 9;</code>
       */
      public static final int TEEC_MEMREF_PARTIAL_OUTPUT_VALUE = 9;
      /**
       * <code>TEEC_MEMREF_PARTIAL_INOUT = 10;</code>
       */
      public static final int TEEC_MEMREF_PARTIAL_INOUT_VALUE = 10;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 1: return TEEC_VALUE_INPUT;
          case 2: return TEEC_VALUE_OUTPUT;
          case 3: return TEEC_VALUE_INOUT;
          case 4: return TEEC_MEMREF_TMP_INPUT;
          case 5: return TEEC_MEMREF_TMP_OUTPUT;
          case 6: return TEEC_MEMREF_TMP_INOUT;
          case 7: return TEEC_MEMREF_WHOLE;
          case 8: return TEEC_MEMREF_PARTIAL_INPUT;
          case 9: return TEEC_MEMREF_PARTIAL_OUTPUT;
          case 10: return TEEC_MEMREF_PARTIAL_INOUT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return TeecParameter.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type)
    }

    private int bitField0_;
    public static final int TEECREGISTEREDMEMORYREFERENCE_FIELD_NUMBER = 1;
    private TeecRegisteredMemoryReference teecRegisteredMemoryReference_;
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
     */
    public boolean hasTeecRegisteredMemoryReference() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
     */
    public TeecRegisteredMemoryReference getTeecRegisteredMemoryReference() {
      return teecRegisteredMemoryReference_;
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
     */
    public TeecRegisteredMemoryReferenceOrBuilder getTeecRegisteredMemoryReferenceOrBuilder() {
      return teecRegisteredMemoryReference_;
    }

    public static final int TEECTEMPMEMORYREFERENCE_FIELD_NUMBER = 2;
    private TeecTempMemoryReference teecTempMemoryReference_;
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
     */
    public boolean hasTeecTempMemoryReference() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
     */
    public TeecTempMemoryReference getTeecTempMemoryReference() {
      return teecTempMemoryReference_;
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
     */
    public TeecTempMemoryReferenceOrBuilder getTeecTempMemoryReferenceOrBuilder() {
      return teecTempMemoryReference_;
    }

    public static final int TEECVALUE_FIELD_NUMBER = 3;
    private TeecValue teecValue_;
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    public boolean hasTeecValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    public TeecValue getTeecValue() {
      return teecValue_;
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    public TeecValueOrBuilder getTeecValueOrBuilder() {
      return teecValue_;
    }

    private void initFields() {
      teecRegisteredMemoryReference_ = TeecRegisteredMemoryReference.getDefaultInstance();
      teecTempMemoryReference_ = TeecTempMemoryReference.getDefaultInstance();
      teecValue_ = TeecValue.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTeecRegisteredMemoryReference()) {
        if (!getTeecRegisteredMemoryReference().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTeecTempMemoryReference()) {
        if (!getTeecTempMemoryReference().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTeecValue()) {
        if (!getTeecValue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, teecRegisteredMemoryReference_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, teecTempMemoryReference_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, teecValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teecRegisteredMemoryReference_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, teecTempMemoryReference_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, teecValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecParameter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecParameter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecParameter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecParameter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecParameter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecParameter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecParameter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecParameter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecParameter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecParameter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecParameter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter)
        TeecParameterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecParameter.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.PbDataTypes.TeecParameter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeecRegisteredMemoryReferenceFieldBuilder();
          getTeecTempMemoryReferenceFieldBuilder();
          getTeecValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (teecRegisteredMemoryReferenceBuilder_ == null) {
          teecRegisteredMemoryReference_ = TeecRegisteredMemoryReference.getDefaultInstance();
        } else {
          teecRegisteredMemoryReferenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (teecTempMemoryReferenceBuilder_ == null) {
          teecTempMemoryReference_ = TeecTempMemoryReference.getDefaultInstance();
        } else {
          teecTempMemoryReferenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (teecValueBuilder_ == null) {
          teecValue_ = TeecValue.getDefaultInstance();
        } else {
          teecValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_descriptor;
      }

      public TeecParameter getDefaultInstanceForType() {
        return TeecParameter.getDefaultInstance();
      }

      public TeecParameter build() {
        TeecParameter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecParameter buildPartial() {
        TeecParameter result = new TeecParameter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (teecRegisteredMemoryReferenceBuilder_ == null) {
          result.teecRegisteredMemoryReference_ = teecRegisteredMemoryReference_;
        } else {
          result.teecRegisteredMemoryReference_ = teecRegisteredMemoryReferenceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (teecTempMemoryReferenceBuilder_ == null) {
          result.teecTempMemoryReference_ = teecTempMemoryReference_;
        } else {
          result.teecTempMemoryReference_ = teecTempMemoryReferenceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (teecValueBuilder_ == null) {
          result.teecValue_ = teecValue_;
        } else {
          result.teecValue_ = teecValueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecParameter) {
          return mergeFrom((TeecParameter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecParameter other) {
        if (other == TeecParameter.getDefaultInstance()) return this;
        if (other.hasTeecRegisteredMemoryReference()) {
          mergeTeecRegisteredMemoryReference(other.getTeecRegisteredMemoryReference());
        }
        if (other.hasTeecTempMemoryReference()) {
          mergeTeecTempMemoryReference(other.getTeecTempMemoryReference());
        }
        if (other.hasTeecValue()) {
          mergeTeecValue(other.getTeecValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasTeecRegisteredMemoryReference()) {
          if (!getTeecRegisteredMemoryReference().isInitialized()) {
            
            return false;
          }
        }
        if (hasTeecTempMemoryReference()) {
          if (!getTeecTempMemoryReference().isInitialized()) {
            
            return false;
          }
        }
        if (hasTeecValue()) {
          if (!getTeecValue().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecParameter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecParameter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private TeecRegisteredMemoryReference teecRegisteredMemoryReference_ = TeecRegisteredMemoryReference.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecRegisteredMemoryReference, TeecRegisteredMemoryReference.Builder, TeecRegisteredMemoryReferenceOrBuilder> teecRegisteredMemoryReferenceBuilder_;
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
       */
      public boolean hasTeecRegisteredMemoryReference() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
       */
      public TeecRegisteredMemoryReference getTeecRegisteredMemoryReference() {
        if (teecRegisteredMemoryReferenceBuilder_ == null) {
          return teecRegisteredMemoryReference_;
        } else {
          return teecRegisteredMemoryReferenceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
       */
      public Builder setTeecRegisteredMemoryReference(TeecRegisteredMemoryReference value) {
        if (teecRegisteredMemoryReferenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teecRegisteredMemoryReference_ = value;
          onChanged();
        } else {
          teecRegisteredMemoryReferenceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
       */
      public Builder setTeecRegisteredMemoryReference(
          TeecRegisteredMemoryReference.Builder builderForValue) {
        if (teecRegisteredMemoryReferenceBuilder_ == null) {
          teecRegisteredMemoryReference_ = builderForValue.build();
          onChanged();
        } else {
          teecRegisteredMemoryReferenceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
       */
      public Builder mergeTeecRegisteredMemoryReference(TeecRegisteredMemoryReference value) {
        if (teecRegisteredMemoryReferenceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              teecRegisteredMemoryReference_ != TeecRegisteredMemoryReference.getDefaultInstance()) {
            teecRegisteredMemoryReference_ =
              TeecRegisteredMemoryReference.newBuilder(teecRegisteredMemoryReference_).mergeFrom(value).buildPartial();
          } else {
            teecRegisteredMemoryReference_ = value;
          }
          onChanged();
        } else {
          teecRegisteredMemoryReferenceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
       */
      public Builder clearTeecRegisteredMemoryReference() {
        if (teecRegisteredMemoryReferenceBuilder_ == null) {
          teecRegisteredMemoryReference_ = TeecRegisteredMemoryReference.getDefaultInstance();
          onChanged();
        } else {
          teecRegisteredMemoryReferenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
       */
      public TeecRegisteredMemoryReference.Builder getTeecRegisteredMemoryReferenceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTeecRegisteredMemoryReferenceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
       */
      public TeecRegisteredMemoryReferenceOrBuilder getTeecRegisteredMemoryReferenceOrBuilder() {
        if (teecRegisteredMemoryReferenceBuilder_ != null) {
          return teecRegisteredMemoryReferenceBuilder_.getMessageOrBuilder();
        } else {
          return teecRegisteredMemoryReference_;
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference teecRegisteredMemoryReference = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecRegisteredMemoryReference, TeecRegisteredMemoryReference.Builder, TeecRegisteredMemoryReferenceOrBuilder>
          getTeecRegisteredMemoryReferenceFieldBuilder() {
        if (teecRegisteredMemoryReferenceBuilder_ == null) {
          teecRegisteredMemoryReferenceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecRegisteredMemoryReference, TeecRegisteredMemoryReference.Builder, TeecRegisteredMemoryReferenceOrBuilder>(
                  getTeecRegisteredMemoryReference(),
                  getParentForChildren(),
                  isClean());
          teecRegisteredMemoryReference_ = null;
        }
        return teecRegisteredMemoryReferenceBuilder_;
      }

      private TeecTempMemoryReference teecTempMemoryReference_ = TeecTempMemoryReference.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecTempMemoryReference, TeecTempMemoryReference.Builder, TeecTempMemoryReferenceOrBuilder> teecTempMemoryReferenceBuilder_;
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
       */
      public boolean hasTeecTempMemoryReference() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
       */
      public TeecTempMemoryReference getTeecTempMemoryReference() {
        if (teecTempMemoryReferenceBuilder_ == null) {
          return teecTempMemoryReference_;
        } else {
          return teecTempMemoryReferenceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
       */
      public Builder setTeecTempMemoryReference(TeecTempMemoryReference value) {
        if (teecTempMemoryReferenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teecTempMemoryReference_ = value;
          onChanged();
        } else {
          teecTempMemoryReferenceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
       */
      public Builder setTeecTempMemoryReference(
          TeecTempMemoryReference.Builder builderForValue) {
        if (teecTempMemoryReferenceBuilder_ == null) {
          teecTempMemoryReference_ = builderForValue.build();
          onChanged();
        } else {
          teecTempMemoryReferenceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
       */
      public Builder mergeTeecTempMemoryReference(TeecTempMemoryReference value) {
        if (teecTempMemoryReferenceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              teecTempMemoryReference_ != TeecTempMemoryReference.getDefaultInstance()) {
            teecTempMemoryReference_ =
              TeecTempMemoryReference.newBuilder(teecTempMemoryReference_).mergeFrom(value).buildPartial();
          } else {
            teecTempMemoryReference_ = value;
          }
          onChanged();
        } else {
          teecTempMemoryReferenceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
       */
      public Builder clearTeecTempMemoryReference() {
        if (teecTempMemoryReferenceBuilder_ == null) {
          teecTempMemoryReference_ = TeecTempMemoryReference.getDefaultInstance();
          onChanged();
        } else {
          teecTempMemoryReferenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
       */
      public TeecTempMemoryReference.Builder getTeecTempMemoryReferenceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTeecTempMemoryReferenceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
       */
      public TeecTempMemoryReferenceOrBuilder getTeecTempMemoryReferenceOrBuilder() {
        if (teecTempMemoryReferenceBuilder_ != null) {
          return teecTempMemoryReferenceBuilder_.getMessageOrBuilder();
        } else {
          return teecTempMemoryReference_;
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference teecTempMemoryReference = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecTempMemoryReference, TeecTempMemoryReference.Builder, TeecTempMemoryReferenceOrBuilder>
          getTeecTempMemoryReferenceFieldBuilder() {
        if (teecTempMemoryReferenceBuilder_ == null) {
          teecTempMemoryReferenceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecTempMemoryReference, TeecTempMemoryReference.Builder, TeecTempMemoryReferenceOrBuilder>(
                  getTeecTempMemoryReference(),
                  getParentForChildren(),
                  isClean());
          teecTempMemoryReference_ = null;
        }
        return teecTempMemoryReferenceBuilder_;
      }

      private TeecValue teecValue_ = TeecValue.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecValue, TeecValue.Builder, TeecValueOrBuilder> teecValueBuilder_;
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public boolean hasTeecValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public TeecValue getTeecValue() {
        if (teecValueBuilder_ == null) {
          return teecValue_;
        } else {
          return teecValueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public Builder setTeecValue(TeecValue value) {
        if (teecValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teecValue_ = value;
          onChanged();
        } else {
          teecValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public Builder setTeecValue(
          TeecValue.Builder builderForValue) {
        if (teecValueBuilder_ == null) {
          teecValue_ = builderForValue.build();
          onChanged();
        } else {
          teecValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public Builder mergeTeecValue(TeecValue value) {
        if (teecValueBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              teecValue_ != TeecValue.getDefaultInstance()) {
            teecValue_ =
              TeecValue.newBuilder(teecValue_).mergeFrom(value).buildPartial();
          } else {
            teecValue_ = value;
          }
          onChanged();
        } else {
          teecValueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public Builder clearTeecValue() {
        if (teecValueBuilder_ == null) {
          teecValue_ = TeecValue.getDefaultInstance();
          onChanged();
        } else {
          teecValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public TeecValue.Builder getTeecValueBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTeecValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public TeecValueOrBuilder getTeecValueOrBuilder() {
        if (teecValueBuilder_ != null) {
          return teecValueBuilder_.getMessageOrBuilder();
        } else {
          return teecValue_;
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecValue, TeecValue.Builder, TeecValueOrBuilder>
          getTeecValueFieldBuilder() {
        if (teecValueBuilder_ == null) {
          teecValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecValue, TeecValue.Builder, TeecValueOrBuilder>(
                  getTeecValue(),
                  getParentForChildren(),
                  isClean());
          teecValue_ = null;
        }
        return teecValueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter)
    }

    static {
      defaultInstance = new TeecParameter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter)
  }

  public interface TeecRegisteredMemoryReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
     */
    boolean hasParent();
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
     */
    TeecSharedMemory getParent();
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
     */
    TeecSharedMemoryOrBuilder getParentOrBuilder();

    /**
     * <code>required int32 size = 2;</code>
     */
    boolean hasSize();
    /**
     * <code>required int32 size = 2;</code>
     */
    int getSize();

    /**
     * <code>required int32 offset = 3;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int32 offset = 3;</code>
     */
    int getOffset();

    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 4;</code>
     */
    boolean hasType();
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 4;</code>
     */
    TeecParameter.Type getType();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference}
   */
  public static final class TeecRegisteredMemoryReference extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference)
      TeecRegisteredMemoryReferenceOrBuilder {
    // Use TeecRegisteredMemoryReference.newBuilder() to construct.
    private TeecRegisteredMemoryReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecRegisteredMemoryReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecRegisteredMemoryReference defaultInstance;
    public static TeecRegisteredMemoryReference getDefaultInstance() {
      return defaultInstance;
    }

    public TeecRegisteredMemoryReference getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecRegisteredMemoryReference(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              TeecSharedMemory.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = parent_.toBuilder();
              }
              parent_ = input.readMessage(TeecSharedMemory.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parent_);
                parent_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              size_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              offset_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              TeecParameter.Type value = TeecParameter.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecRegisteredMemoryReference.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecRegisteredMemoryReference> PARSER =
        new com.google.protobuf.AbstractParser<TeecRegisteredMemoryReference>() {
      public TeecRegisteredMemoryReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecRegisteredMemoryReference(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecRegisteredMemoryReference> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PARENT_FIELD_NUMBER = 1;
    private TeecSharedMemory parent_;
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
     */
    public boolean hasParent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
     */
    public TeecSharedMemory getParent() {
      return parent_;
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
     */
    public TeecSharedMemoryOrBuilder getParentOrBuilder() {
      return parent_;
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private int size_;
    /**
     * <code>required int32 size = 2;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 size = 2;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int OFFSET_FIELD_NUMBER = 3;
    private int offset_;
    /**
     * <code>required int32 offset = 3;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 offset = 3;</code>
     */
    public int getOffset() {
      return offset_;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private TeecParameter.Type type_;
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 4;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 4;</code>
     */
    public TeecParameter.Type getType() {
      return type_;
    }

    private void initFields() {
      parent_ = TeecSharedMemory.getDefaultInstance();
      size_ = 0;
      offset_ = 0;
      type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasParent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getParent().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, parent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, offset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, parent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, offset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecRegisteredMemoryReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecRegisteredMemoryReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecRegisteredMemoryReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecRegisteredMemoryReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecRegisteredMemoryReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecRegisteredMemoryReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecRegisteredMemoryReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecRegisteredMemoryReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecRegisteredMemoryReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecRegisteredMemoryReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecRegisteredMemoryReference prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference)
        TeecRegisteredMemoryReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecRegisteredMemoryReference.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.PbDataTypes.TeecRegisteredMemoryReference.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (parentBuilder_ == null) {
          parent_ = TeecSharedMemory.getDefaultInstance();
        } else {
          parentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_descriptor;
      }

      public TeecRegisteredMemoryReference getDefaultInstanceForType() {
        return TeecRegisteredMemoryReference.getDefaultInstance();
      }

      public TeecRegisteredMemoryReference build() {
        TeecRegisteredMemoryReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecRegisteredMemoryReference buildPartial() {
        TeecRegisteredMemoryReference result = new TeecRegisteredMemoryReference(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (parentBuilder_ == null) {
          result.parent_ = parent_;
        } else {
          result.parent_ = parentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecRegisteredMemoryReference) {
          return mergeFrom((TeecRegisteredMemoryReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecRegisteredMemoryReference other) {
        if (other == TeecRegisteredMemoryReference.getDefaultInstance()) return this;
        if (other.hasParent()) {
          mergeParent(other.getParent());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasParent()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!getParent().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecRegisteredMemoryReference parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecRegisteredMemoryReference) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private TeecSharedMemory parent_ = TeecSharedMemory.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder> parentBuilder_;
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
       */
      public boolean hasParent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
       */
      public TeecSharedMemory getParent() {
        if (parentBuilder_ == null) {
          return parent_;
        } else {
          return parentBuilder_.getMessage();
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
       */
      public Builder setParent(TeecSharedMemory value) {
        if (parentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parent_ = value;
          onChanged();
        } else {
          parentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
       */
      public Builder setParent(
          TeecSharedMemory.Builder builderForValue) {
        if (parentBuilder_ == null) {
          parent_ = builderForValue.build();
          onChanged();
        } else {
          parentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
       */
      public Builder mergeParent(TeecSharedMemory value) {
        if (parentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              parent_ != TeecSharedMemory.getDefaultInstance()) {
            parent_ =
              TeecSharedMemory.newBuilder(parent_).mergeFrom(value).buildPartial();
          } else {
            parent_ = value;
          }
          onChanged();
        } else {
          parentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
       */
      public Builder clearParent() {
        if (parentBuilder_ == null) {
          parent_ = TeecSharedMemory.getDefaultInstance();
          onChanged();
        } else {
          parentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
       */
      public TeecSharedMemory.Builder getParentBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getParentFieldBuilder().getBuilder();
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
       */
      public TeecSharedMemoryOrBuilder getParentOrBuilder() {
        if (parentBuilder_ != null) {
          return parentBuilder_.getMessageOrBuilder();
        } else {
          return parent_;
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory parent = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder>
          getParentFieldBuilder() {
        if (parentBuilder_ == null) {
          parentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder>(
                  getParent(),
                  getParentForChildren(),
                  isClean());
          parent_ = null;
        }
        return parentBuilder_;
      }

      private int size_ ;
      /**
       * <code>required int32 size = 2;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000002;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0;
        onChanged();
        return this;
      }

      private int offset_ ;
      /**
       * <code>required int32 offset = 3;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 offset = 3;</code>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>required int32 offset = 3;</code>
       */
      public Builder setOffset(int value) {
        bitField0_ |= 0x00000004;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 offset = 3;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000004);
        offset_ = 0;
        onChanged();
        return this;
      }

      private TeecParameter.Type type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 4;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 4;</code>
       */
      public TeecParameter.Type getType() {
        return type_;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 4;</code>
       */
      public Builder setType(TeecParameter.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 4;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference)
    }

    static {
      defaultInstance = new TeecRegisteredMemoryReference(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecRegisteredMemoryReference)
  }

  public interface TeecSessionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSession)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 session = 1;</code>
     */
    boolean hasSession();
    /**
     * <code>required int32 session = 1;</code>
     */
    int getSession();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSession}
   */
  public static final class TeecSession extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSession)
      TeecSessionOrBuilder {
    // Use ITeecSession.newBuilder() to construct.
    private TeecSession(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecSession(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecSession defaultInstance;
    public static TeecSession getDefaultInstance() {
      return defaultInstance;
    }

    public TeecSession getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecSession(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              session_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecSession.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecSession> PARSER =
        new com.google.protobuf.AbstractParser<TeecSession>() {
      public TeecSession parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecSession(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecSession> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SESSION_FIELD_NUMBER = 1;
    private int session_;
    /**
     * <code>required int32 session = 1;</code>
     */
    public boolean hasSession() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 session = 1;</code>
     */
    public int getSession() {
      return session_;
    }

    private void initFields() {
      session_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSession()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, session_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, session_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecSession parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSession parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSession parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSession parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSession parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSession parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecSession parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecSession parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecSession parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSession parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecSession prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSession}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSession)
        TeecSessionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecSession.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.PbDataTypes.ITeecSession.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        session_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_descriptor;
      }

      public TeecSession getDefaultInstanceForType() {
        return TeecSession.getDefaultInstance();
      }

      public TeecSession build() {
        TeecSession result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecSession buildPartial() {
        TeecSession result = new TeecSession(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.session_ = session_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecSession) {
          return mergeFrom((TeecSession)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecSession other) {
        if (other == TeecSession.getDefaultInstance()) return this;
        if (other.hasSession()) {
          setSession(other.getSession());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSession()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecSession parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecSession) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int session_ ;
      /**
       * <code>required int32 session = 1;</code>
       */
      public boolean hasSession() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 session = 1;</code>
       */
      public int getSession() {
        return session_;
      }
      /**
       * <code>required int32 session = 1;</code>
       */
      public Builder setSession(int value) {
        bitField0_ |= 0x00000001;
        session_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 session = 1;</code>
       */
      public Builder clearSession() {
        bitField0_ = (bitField0_ & ~0x00000001);
        session_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSession)
    }

    static {
      defaultInstance = new TeecSession(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSession)
  }

  public interface TeecSharedMemoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes buffer = 1;</code>
     */
    boolean hasBuffer();
    /**
     * <code>required bytes buffer = 1;</code>
     */
    com.google.protobuf.ByteString getBuffer();

    /**
     * <code>required int32 size = 2;</code>
     */
    boolean hasSize();
    /**
     * <code>required int32 size = 2;</code>
     */
    int getSize();

    /**
     * <code>required int32 flags = 3;</code>
     */
    boolean hasFlags();
    /**
     * <code>required int32 flags = 3;</code>
     */
    int getFlags();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory}
   */
  public static final class TeecSharedMemory extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory)
      TeecSharedMemoryOrBuilder {
    // Use ITeecSharedMemory.newBuilder() to construct.
    private TeecSharedMemory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecSharedMemory(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecSharedMemory defaultInstance;
    public static TeecSharedMemory getDefaultInstance() {
      return defaultInstance;
    }

    public TeecSharedMemory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecSharedMemory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              buffer_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              size_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              flags_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecSharedMemory.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecSharedMemory> PARSER =
        new com.google.protobuf.AbstractParser<TeecSharedMemory>() {
      public TeecSharedMemory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecSharedMemory(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecSharedMemory> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int BUFFER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString buffer_;
    /**
     * <code>required bytes buffer = 1;</code>
     */
    public boolean hasBuffer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes buffer = 1;</code>
     */
    public com.google.protobuf.ByteString getBuffer() {
      return buffer_;
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private int size_;
    /**
     * <code>required int32 size = 2;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 size = 2;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int FLAGS_FIELD_NUMBER = 3;
    private int flags_;
    /**
     * <code>required int32 flags = 3;</code>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 flags = 3;</code>
     */
    public int getFlags() {
      return flags_;
    }

    private void initFields() {
      buffer_ = com.google.protobuf.ByteString.EMPTY;
      size_ = 0;
      flags_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBuffer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFlags()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, buffer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, flags_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, buffer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, flags_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecSharedMemory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecSharedMemory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecSharedMemory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecSharedMemory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecSharedMemory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory)
        TeecSharedMemoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecSharedMemory.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.PbDataTypes.ITeecSharedMemory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        buffer_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        flags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_descriptor;
      }

      public TeecSharedMemory getDefaultInstanceForType() {
        return TeecSharedMemory.getDefaultInstance();
      }

      public TeecSharedMemory build() {
        TeecSharedMemory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecSharedMemory buildPartial() {
        TeecSharedMemory result = new TeecSharedMemory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.buffer_ = buffer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.flags_ = flags_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecSharedMemory) {
          return mergeFrom((TeecSharedMemory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecSharedMemory other) {
        if (other == TeecSharedMemory.getDefaultInstance()) return this;
        if (other.hasBuffer()) {
          setBuffer(other.getBuffer());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBuffer()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        if (!hasFlags()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecSharedMemory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecSharedMemory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString buffer_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes buffer = 1;</code>
       */
      public boolean hasBuffer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes buffer = 1;</code>
       */
      public com.google.protobuf.ByteString getBuffer() {
        return buffer_;
      }
      /**
       * <code>required bytes buffer = 1;</code>
       */
      public Builder setBuffer(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        buffer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes buffer = 1;</code>
       */
      public Builder clearBuffer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        buffer_ = getDefaultInstance().getBuffer();
        onChanged();
        return this;
      }

      private int size_ ;
      /**
       * <code>required int32 size = 2;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000002;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <code>required int32 flags = 3;</code>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 flags = 3;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <code>required int32 flags = 3;</code>
       */
      public Builder setFlags(int value) {
        bitField0_ |= 0x00000004;
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 flags = 3;</code>
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00000004);
        flags_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory)
    }

    static {
      defaultInstance = new TeecSharedMemory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.ITeecSharedMemory)
  }

  public interface TeecTempMemoryReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes buffer = 1;</code>
     */
    boolean hasBuffer();
    /**
     * <code>required bytes buffer = 1;</code>
     */
    com.google.protobuf.ByteString getBuffer();

    /**
     * <code>required int32 size = 2;</code>
     */
    boolean hasSize();
    /**
     * <code>required int32 size = 2;</code>
     */
    int getSize();

    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
     */
    TeecParameter.Type getType();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference}
   */
  public static final class TeecTempMemoryReference extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference)
      TeecTempMemoryReferenceOrBuilder {
    // Use TeecTempMemoryReference.newBuilder() to construct.
    private TeecTempMemoryReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecTempMemoryReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecTempMemoryReference defaultInstance;
    public static TeecTempMemoryReference getDefaultInstance() {
      return defaultInstance;
    }

    public TeecTempMemoryReference getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecTempMemoryReference(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              buffer_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              size_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              TeecParameter.Type value = TeecParameter.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecTempMemoryReference.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecTempMemoryReference> PARSER =
        new com.google.protobuf.AbstractParser<TeecTempMemoryReference>() {
      public TeecTempMemoryReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecTempMemoryReference(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecTempMemoryReference> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int BUFFER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString buffer_;
    /**
     * <code>required bytes buffer = 1;</code>
     */
    public boolean hasBuffer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes buffer = 1;</code>
     */
    public com.google.protobuf.ByteString getBuffer() {
      return buffer_;
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private int size_;
    /**
     * <code>required int32 size = 2;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 size = 2;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private TeecParameter.Type type_;
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
     */
    public TeecParameter.Type getType() {
      return type_;
    }

    private void initFields() {
      buffer_ = com.google.protobuf.ByteString.EMPTY;
      size_ = 0;
      type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBuffer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, buffer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, buffer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecTempMemoryReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecTempMemoryReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecTempMemoryReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecTempMemoryReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecTempMemoryReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecTempMemoryReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecTempMemoryReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecTempMemoryReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecTempMemoryReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecTempMemoryReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecTempMemoryReference prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference)
        TeecTempMemoryReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecTempMemoryReference.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.PbDataTypes.TeecTempMemoryReference.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        buffer_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_descriptor;
      }

      public TeecTempMemoryReference getDefaultInstanceForType() {
        return TeecTempMemoryReference.getDefaultInstance();
      }

      public TeecTempMemoryReference build() {
        TeecTempMemoryReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecTempMemoryReference buildPartial() {
        TeecTempMemoryReference result = new TeecTempMemoryReference(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.buffer_ = buffer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecTempMemoryReference) {
          return mergeFrom((TeecTempMemoryReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecTempMemoryReference other) {
        if (other == TeecTempMemoryReference.getDefaultInstance()) return this;
        if (other.hasBuffer()) {
          setBuffer(other.getBuffer());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBuffer()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecTempMemoryReference parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecTempMemoryReference) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString buffer_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes buffer = 1;</code>
       */
      public boolean hasBuffer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes buffer = 1;</code>
       */
      public com.google.protobuf.ByteString getBuffer() {
        return buffer_;
      }
      /**
       * <code>required bytes buffer = 1;</code>
       */
      public Builder setBuffer(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        buffer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes buffer = 1;</code>
       */
      public Builder clearBuffer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        buffer_ = getDefaultInstance().getBuffer();
        onChanged();
        return this;
      }

      private int size_ ;
      /**
       * <code>required int32 size = 2;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000002;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0;
        onChanged();
        return this;
      }

      private TeecParameter.Type type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
       */
      public TeecParameter.Type getType() {
        return type_;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
       */
      public Builder setType(TeecParameter.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference)
    }

    static {
      defaultInstance = new TeecTempMemoryReference(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecTempMemoryReference)
  }

  public interface TeecUuidOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecUuid)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 timeLow = 1;</code>
     */
    boolean hasTimeLow();
    /**
     * <code>required int32 timeLow = 1;</code>
     */
    int getTimeLow();

    /**
     * <code>required int32 timeMid = 2;</code>
     */
    boolean hasTimeMid();
    /**
     * <code>required int32 timeMid = 2;</code>
     */
    int getTimeMid();

    /**
     * <code>required int32 timeHiAndVersion = 3;</code>
     */
    boolean hasTimeHiAndVersion();
    /**
     * <code>required int32 timeHiAndVersion = 3;</code>
     */
    int getTimeHiAndVersion();

    /**
     * <code>required bytes clockSeqAndNode = 4;</code>
     */
    boolean hasClockSeqAndNode();
    /**
     * <code>required bytes clockSeqAndNode = 4;</code>
     */
    com.google.protobuf.ByteString getClockSeqAndNode();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecUuid}
   */
  public static final class TeecUuid extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecUuid)
      TeecUuidOrBuilder {
    // Use TeecUuid.newBuilder() to construct.
    private TeecUuid(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecUuid(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecUuid defaultInstance;
    public static TeecUuid getDefaultInstance() {
      return defaultInstance;
    }

    public TeecUuid getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecUuid(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timeLow_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timeMid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timeHiAndVersion_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              clockSeqAndNode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecUuid.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecUuid> PARSER =
        new com.google.protobuf.AbstractParser<TeecUuid>() {
      public TeecUuid parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecUuid(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecUuid> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMELOW_FIELD_NUMBER = 1;
    private int timeLow_;
    /**
     * <code>required int32 timeLow = 1;</code>
     */
    public boolean hasTimeLow() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 timeLow = 1;</code>
     */
    public int getTimeLow() {
      return timeLow_;
    }

    public static final int TIMEMID_FIELD_NUMBER = 2;
    private int timeMid_;
    /**
     * <code>required int32 timeMid = 2;</code>
     */
    public boolean hasTimeMid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 timeMid = 2;</code>
     */
    public int getTimeMid() {
      return timeMid_;
    }

    public static final int TIMEHIANDVERSION_FIELD_NUMBER = 3;
    private int timeHiAndVersion_;
    /**
     * <code>required int32 timeHiAndVersion = 3;</code>
     */
    public boolean hasTimeHiAndVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 timeHiAndVersion = 3;</code>
     */
    public int getTimeHiAndVersion() {
      return timeHiAndVersion_;
    }

    public static final int CLOCKSEQANDNODE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString clockSeqAndNode_;
    /**
     * <code>required bytes clockSeqAndNode = 4;</code>
     */
    public boolean hasClockSeqAndNode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes clockSeqAndNode = 4;</code>
     */
    public com.google.protobuf.ByteString getClockSeqAndNode() {
      return clockSeqAndNode_;
    }

    private void initFields() {
      timeLow_ = 0;
      timeMid_ = 0;
      timeHiAndVersion_ = 0;
      clockSeqAndNode_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeLow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeMid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeHiAndVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClockSeqAndNode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, timeLow_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, timeMid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, timeHiAndVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, clockSeqAndNode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, timeLow_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, timeMid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, timeHiAndVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, clockSeqAndNode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecUuid parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecUuid parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecUuid parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecUuid parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecUuid parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecUuid parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecUuid parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecUuid parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecUuid parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecUuid parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecUuid prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecUuid}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecUuid)
        TeecUuidOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecUuid.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.PbDataTypes.TeecUuid.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeLow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeMid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timeHiAndVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        clockSeqAndNode_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_descriptor;
      }

      public TeecUuid getDefaultInstanceForType() {
        return TeecUuid.getDefaultInstance();
      }

      public TeecUuid build() {
        TeecUuid result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecUuid buildPartial() {
        TeecUuid result = new TeecUuid(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeLow_ = timeLow_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeMid_ = timeMid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeHiAndVersion_ = timeHiAndVersion_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clockSeqAndNode_ = clockSeqAndNode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecUuid) {
          return mergeFrom((TeecUuid)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecUuid other) {
        if (other == TeecUuid.getDefaultInstance()) return this;
        if (other.hasTimeLow()) {
          setTimeLow(other.getTimeLow());
        }
        if (other.hasTimeMid()) {
          setTimeMid(other.getTimeMid());
        }
        if (other.hasTimeHiAndVersion()) {
          setTimeHiAndVersion(other.getTimeHiAndVersion());
        }
        if (other.hasClockSeqAndNode()) {
          setClockSeqAndNode(other.getClockSeqAndNode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeLow()) {
          
          return false;
        }
        if (!hasTimeMid()) {
          
          return false;
        }
        if (!hasTimeHiAndVersion()) {
          
          return false;
        }
        if (!hasClockSeqAndNode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecUuid parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecUuid) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int timeLow_ ;
      /**
       * <code>required int32 timeLow = 1;</code>
       */
      public boolean hasTimeLow() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 timeLow = 1;</code>
       */
      public int getTimeLow() {
        return timeLow_;
      }
      /**
       * <code>required int32 timeLow = 1;</code>
       */
      public Builder setTimeLow(int value) {
        bitField0_ |= 0x00000001;
        timeLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 timeLow = 1;</code>
       */
      public Builder clearTimeLow() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeLow_ = 0;
        onChanged();
        return this;
      }

      private int timeMid_ ;
      /**
       * <code>required int32 timeMid = 2;</code>
       */
      public boolean hasTimeMid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 timeMid = 2;</code>
       */
      public int getTimeMid() {
        return timeMid_;
      }
      /**
       * <code>required int32 timeMid = 2;</code>
       */
      public Builder setTimeMid(int value) {
        bitField0_ |= 0x00000002;
        timeMid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 timeMid = 2;</code>
       */
      public Builder clearTimeMid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeMid_ = 0;
        onChanged();
        return this;
      }

      private int timeHiAndVersion_ ;
      /**
       * <code>required int32 timeHiAndVersion = 3;</code>
       */
      public boolean hasTimeHiAndVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 timeHiAndVersion = 3;</code>
       */
      public int getTimeHiAndVersion() {
        return timeHiAndVersion_;
      }
      /**
       * <code>required int32 timeHiAndVersion = 3;</code>
       */
      public Builder setTimeHiAndVersion(int value) {
        bitField0_ |= 0x00000004;
        timeHiAndVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 timeHiAndVersion = 3;</code>
       */
      public Builder clearTimeHiAndVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeHiAndVersion_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString clockSeqAndNode_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes clockSeqAndNode = 4;</code>
       */
      public boolean hasClockSeqAndNode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes clockSeqAndNode = 4;</code>
       */
      public com.google.protobuf.ByteString getClockSeqAndNode() {
        return clockSeqAndNode_;
      }
      /**
       * <code>required bytes clockSeqAndNode = 4;</code>
       */
      public Builder setClockSeqAndNode(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        clockSeqAndNode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes clockSeqAndNode = 4;</code>
       */
      public Builder clearClockSeqAndNode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clockSeqAndNode_ = getDefaultInstance().getClockSeqAndNode();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecUuid)
    }

    static {
      defaultInstance = new TeecUuid(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecUuid)
  }

  public interface TeecValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 a = 1;</code>
     */
    boolean hasA();
    /**
     * <code>required int32 a = 1;</code>
     */
    int getA();

    /**
     * <code>required int32 b = 2;</code>
     */
    boolean hasB();
    /**
     * <code>required int32 b = 2;</code>
     */
    int getB();

    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
     */
    TeecParameter.Type getType();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue}
   */
  public static final class TeecValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue)
      TeecValueOrBuilder {
    // Use TeecValue.newBuilder() to construct.
    private TeecValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecValue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecValue defaultInstance;
    public static TeecValue getDefaultInstance() {
      return defaultInstance;
    }

    public TeecValue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              a_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              b_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              TeecParameter.Type value = TeecParameter.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecValue.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecValue> PARSER =
        new com.google.protobuf.AbstractParser<TeecValue>() {
      public TeecValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecValue(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecValue> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int A_FIELD_NUMBER = 1;
    private int a_;
    /**
     * <code>required int32 a = 1;</code>
     */
    public boolean hasA() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 a = 1;</code>
     */
    public int getA() {
      return a_;
    }

    public static final int B_FIELD_NUMBER = 2;
    private int b_;
    /**
     * <code>required int32 b = 2;</code>
     */
    public boolean hasB() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 b = 2;</code>
     */
    public int getB() {
      return b_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private TeecParameter.Type type_;
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
     */
    public TeecParameter.Type getType() {
      return type_;
    }

    private void initFields() {
      a_ = 0;
      b_ = 0;
      type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasA()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, a_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, b_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, a_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, b_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue)
        TeecValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecValue.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.PbDataTypes.TeecValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        a_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        b_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PbDataTypes.internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_descriptor;
      }

      public TeecValue getDefaultInstanceForType() {
        return TeecValue.getDefaultInstance();
      }

      public TeecValue build() {
        TeecValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecValue buildPartial() {
        TeecValue result = new TeecValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.a_ = a_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.b_ = b_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecValue) {
          return mergeFrom((TeecValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecValue other) {
        if (other == TeecValue.getDefaultInstance()) return this;
        if (other.hasA()) {
          setA(other.getA());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasA()) {
          
          return false;
        }
        if (!hasB()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecValue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int a_ ;
      /**
       * <code>required int32 a = 1;</code>
       */
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 a = 1;</code>
       */
      public int getA() {
        return a_;
      }
      /**
       * <code>required int32 a = 1;</code>
       */
      public Builder setA(int value) {
        bitField0_ |= 0x00000001;
        a_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 a = 1;</code>
       */
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        a_ = 0;
        onChanged();
        return this;
      }

      private int b_ ;
      /**
       * <code>required int32 b = 2;</code>
       */
      public boolean hasB() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 b = 2;</code>
       */
      public int getB() {
        return b_;
      }
      /**
       * <code>required int32 b = 2;</code>
       */
      public Builder setB(int value) {
        bitField0_ |= 0x00000002;
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 b = 2;</code>
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = 0;
        onChanged();
        return this;
      }

      private TeecParameter.Type type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
       */
      public TeecParameter.Type getType() {
        return type_;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
       */
      public Builder setType(TeecParameter.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecParameter.Type type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = TeecParameter.Type.TEEC_VALUE_INPUT;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue)
    }

    static {
      defaultInstance = new TeecValue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.sharedlibrary.pbdatatypes.TeecValue)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021GPDataTypes.proto\022.fi.aalto.ssg.opente" +
      "e.sharedlibrary.pbdatatypes\"\037\n\013TeecConte" +
      "xt\022\020\n\010mContext\030\001 \002(\005\"q\n\rTeecOperation\022\020\n" +
      "\010mStarted\030\001 \002(\005\022N\n\007mParams\030\002 \002(\0132=.fi.aa" +
      "lto.ssg.opentee.sharedlibrary.pbdatatype" +
      "s.TeecParameter\"\320\004\n\rTeecParameter\022t\n\035tee" +
      "cRegisteredMemoryReference\030\001 \001(\0132M.fi.aa" +
      "lto.ssg.opentee.sharedlibrary.pbdatatype" +
      "s.TeecRegisteredMemoryReference\022h\n\027teecT" +
      "empMemoryReference\030\002 \001(\0132G.fi.aalto.ssg.",
      "opentee.sharedlibrary.pbdatatypes.TeecTe" +
      "mpMemoryReference\022L\n\tteecValue\030\003 \001(\01329.f" +
      "i.aalto.ssg.opentee.sharedlibrary.pbdata" +
      "types.TeecValue\"\220\002\n\004Type\022\024\n\020TEEC_VALUE_I" +
      "NPUT\020\001\022\025\n\021TEEC_VALUE_OUTPUT\020\002\022\024\n\020TEEC_VA" +
      "LUE_INOUT\020\003\022\031\n\025TEEC_MEMREF_TMP_INPUT\020\004\022\032" +
      "\n\026TEEC_MEMREF_TMP_OUTPUT\020\005\022\031\n\025TEEC_MEMRE" +
      "F_TMP_INOUT\020\006\022\025\n\021TEEC_MEMREF_WHOLE\020\007\022\035\n\031" +
      "TEEC_MEMREF_PARTIAL_INPUT\020\010\022\036\n\032TEEC_MEMR" +
      "EF_PARTIAL_OUTPUT\020\t\022\035\n\031TEEC_MEMREF_PARTI",
      "AL_INOUT\020\n\"\341\001\n\035TeecRegisteredMemoryRefer" +
      "ence\022P\n\006parent\030\001 \002(\0132@.fi.aalto.ssg.open" +
      "tee.sharedlibrary.pbdatatypes.TeecShared" +
      "Memory\022\014\n\004size\030\002 \002(\005\022\016\n\006offset\030\003 \002(\005\022P\n\004" +
      "type\030\004 \002(\0162B.fi.aalto.ssg.opentee.shared" +
      "library.pbdatatypes.TeecParameter.Type\"\036" +
      "\n\013TeecSession\022\017\n\007session\030\001 \002(\005\"?\n\020TeecSh" +
      "aredMemory\022\016\n\006buffer\030\001 \002(\014\022\014\n\004size\030\002 \002(\005" +
      "\022\r\n\005flags\030\003 \002(\005\"\211\001\n\027TeecTempMemoryRefere" +
      "nce\022\016\n\006buffer\030\001 \002(\014\022\014\n\004size\030\002 \002(\005\022P\n\004typ",
      "e\030\003 \002(\0162B.fi.aalto.ssg.opentee.sharedlib" +
      "rary.pbdatatypes.TeecParameter.Type\"_\n\010T" +
      "eecUuid\022\017\n\007timeLow\030\001 \002(\005\022\017\n\007timeMid\030\002 \002(" +
      "\005\022\030\n\020timeHiAndVersion\030\003 \002(\005\022\027\n\017clockSeqA" +
      "ndNode\030\004 \002(\014\"s\n\tTeecValue\022\t\n\001a\030\001 \002(\005\022\t\n\001" +
      "b\030\002 \002(\005\022P\n\004type\030\003 \002(\0162B.fi.aalto.ssg.ope" +
      "ntee.sharedlibrary.pbdatatypes.TeecParam" +
      "eter.TypeB=\n.fi.aalto.ssg.opentee.shared" +
      "library.pbdatatypesB\013PbDataTypes"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecContext_descriptor,
        new String[] { "MContext", });
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecOperation_descriptor,
        new String[] { "MStarted", "MParams", });
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecParameter_descriptor,
        new String[] { "TeecRegisteredMemoryReference", "TeecTempMemoryReference", "TeecValue", });
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecRegisteredMemoryReference_descriptor,
        new String[] { "Parent", "Size", "Offset", "Type", });
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSession_descriptor,
        new String[] { "Session", });
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecSharedMemory_descriptor,
        new String[] { "Buffer", "Size", "Flags", });
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecTempMemoryReference_descriptor,
        new String[] { "Buffer", "Size", "Type", });
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecUuid_descriptor,
        new String[] { "TimeLow", "TimeMid", "TimeHiAndVersion", "ClockSeqAndNode", });
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_sharedlibrary_pbdatatypes_TeecValue_descriptor,
        new String[] { "A", "B", "Type", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
