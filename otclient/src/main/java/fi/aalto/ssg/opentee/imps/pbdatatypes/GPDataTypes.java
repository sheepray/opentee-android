// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GPDataTypes.proto

package fi.aalto.ssg.opentee.imps.pbdatatypes;

public final class GPDataTypes {
  private GPDataTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TeecOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 mStarted = 1;</code>
     */
    boolean hasMStarted();
    /**
     * <code>required int32 mStarted = 1;</code>
     */
    int getMStarted();

    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    boolean hasMParams();
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    TeecParameter getMParams();
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    TeecParameterOrBuilder getMParamsOrBuilder();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation}
   */
  public static final class TeecOperation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
      TeecOperationOrBuilder {
    // Use TeecOperation.newBuilder() to construct.
    private TeecOperation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecOperation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecOperation defaultInstance;
    public static TeecOperation getDefaultInstance() {
      return defaultInstance;
    }

    public TeecOperation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecOperation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mStarted_ = input.readInt32();
              break;
            }
            case 18: {
              TeecParameter.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = mParams_.toBuilder();
              }
              mParams_ = input.readMessage(TeecParameter.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mParams_);
                mParams_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecOperation.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecOperation> PARSER =
        new com.google.protobuf.AbstractParser<TeecOperation>() {
      public TeecOperation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecOperation(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecOperation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MSTARTED_FIELD_NUMBER = 1;
    private int mStarted_;
    /**
     * <code>required int32 mStarted = 1;</code>
     */
    public boolean hasMStarted() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 mStarted = 1;</code>
     */
    public int getMStarted() {
      return mStarted_;
    }

    public static final int MPARAMS_FIELD_NUMBER = 2;
    private TeecParameter mParams_;
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public boolean hasMParams() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public TeecParameter getMParams() {
      return mParams_;
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public TeecParameterOrBuilder getMParamsOrBuilder() {
      return mParams_;
    }

    private void initFields() {
      mStarted_ = 0;
      mParams_ = TeecParameter.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMStarted()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMParams()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMParams().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mStarted_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, mParams_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mStarted_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mParams_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecOperation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
        TeecOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecOperation.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecOperation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMParamsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mStarted_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (mParamsBuilder_ == null) {
          mParams_ = TeecParameter.getDefaultInstance();
        } else {
          mParamsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor;
      }

      public TeecOperation getDefaultInstanceForType() {
        return TeecOperation.getDefaultInstance();
      }

      public TeecOperation build() {
        TeecOperation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecOperation buildPartial() {
        TeecOperation result = new TeecOperation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mStarted_ = mStarted_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (mParamsBuilder_ == null) {
          result.mParams_ = mParams_;
        } else {
          result.mParams_ = mParamsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecOperation) {
          return mergeFrom((TeecOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecOperation other) {
        if (other == TeecOperation.getDefaultInstance()) return this;
        if (other.hasMStarted()) {
          setMStarted(other.getMStarted());
        }
        if (other.hasMParams()) {
          mergeMParams(other.getMParams());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMStarted()) {
          
          return false;
        }
        if (!hasMParams()) {
          
          return false;
        }
        if (!getMParams().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecOperation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecOperation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mStarted_ ;
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public boolean hasMStarted() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public int getMStarted() {
        return mStarted_;
      }
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public Builder setMStarted(int value) {
        bitField0_ |= 0x00000001;
        mStarted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public Builder clearMStarted() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mStarted_ = 0;
        onChanged();
        return this;
      }

      private TeecParameter mParams_ = TeecParameter.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecParameter, TeecParameter.Builder, TeecParameterOrBuilder> mParamsBuilder_;
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public boolean hasMParams() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameter getMParams() {
        if (mParamsBuilder_ == null) {
          return mParams_;
        } else {
          return mParamsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder setMParams(TeecParameter value) {
        if (mParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mParams_ = value;
          onChanged();
        } else {
          mParamsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder setMParams(
          TeecParameter.Builder builderForValue) {
        if (mParamsBuilder_ == null) {
          mParams_ = builderForValue.build();
          onChanged();
        } else {
          mParamsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder mergeMParams(TeecParameter value) {
        if (mParamsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              mParams_ != TeecParameter.getDefaultInstance()) {
            mParams_ =
              TeecParameter.newBuilder(mParams_).mergeFrom(value).buildPartial();
          } else {
            mParams_ = value;
          }
          onChanged();
        } else {
          mParamsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder clearMParams() {
        if (mParamsBuilder_ == null) {
          mParams_ = TeecParameter.getDefaultInstance();
          onChanged();
        } else {
          mParamsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameter.Builder getMParamsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMParamsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameterOrBuilder getMParamsOrBuilder() {
        if (mParamsBuilder_ != null) {
          return mParamsBuilder_.getMessageOrBuilder();
        } else {
          return mParams_;
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecParameter, TeecParameter.Builder, TeecParameterOrBuilder>
          getMParamsFieldBuilder() {
        if (mParamsBuilder_ == null) {
          mParamsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecParameter, TeecParameter.Builder, TeecParameterOrBuilder>(
                  getMParams(),
                  getParentForChildren(),
                  isClean());
          mParams_ = null;
        }
        return mParamsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
    }

    static {
      defaultInstance = new TeecOperation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
  }

  public interface TeecParameterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
     */
    boolean hasTeecSharedMemory();
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
     */
    TeecSharedMemory getTeecSharedMemory();
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
     */
    TeecSharedMemoryOrBuilder getTeecSharedMemoryOrBuilder();

    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
     */
    boolean hasTeecValue();
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
     */
    TeecValue getTeecValue();
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
     */
    TeecValueOrBuilder getTeecValueOrBuilder();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter}
   */
  public static final class TeecParameter extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
      TeecParameterOrBuilder {
    // Use TeecParameter.newBuilder() to construct.
    private TeecParameter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecParameter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecParameter defaultInstance;
    public static TeecParameter getDefaultInstance() {
      return defaultInstance;
    }

    public TeecParameter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecParameter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              TeecSharedMemory.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = teecSharedMemory_.toBuilder();
              }
              teecSharedMemory_ = input.readMessage(TeecSharedMemory.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teecSharedMemory_);
                teecSharedMemory_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              TeecValue.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = teecValue_.toBuilder();
              }
              teecValue_ = input.readMessage(TeecValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teecValue_);
                teecValue_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecParameter.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecParameter> PARSER =
        new com.google.protobuf.AbstractParser<TeecParameter>() {
      public TeecParameter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecParameter(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecParameter> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEECSHAREDMEMORY_FIELD_NUMBER = 1;
    private TeecSharedMemory teecSharedMemory_;
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
     */
    public boolean hasTeecSharedMemory() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
     */
    public TeecSharedMemory getTeecSharedMemory() {
      return teecSharedMemory_;
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
     */
    public TeecSharedMemoryOrBuilder getTeecSharedMemoryOrBuilder() {
      return teecSharedMemory_;
    }

    public static final int TEECVALUE_FIELD_NUMBER = 2;
    private TeecValue teecValue_;
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
     */
    public boolean hasTeecValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
     */
    public TeecValue getTeecValue() {
      return teecValue_;
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
     */
    public TeecValueOrBuilder getTeecValueOrBuilder() {
      return teecValue_;
    }

    private void initFields() {
      teecSharedMemory_ = TeecSharedMemory.getDefaultInstance();
      teecValue_ = TeecValue.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTeecSharedMemory()) {
        if (!getTeecSharedMemory().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTeecValue()) {
        if (!getTeecValue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, teecSharedMemory_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, teecValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teecSharedMemory_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, teecValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecParameter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecParameter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecParameter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecParameter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecParameter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecParameter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecParameter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecParameter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecParameter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecParameter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecParameter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
        TeecParameterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecParameter.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecParameter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeecSharedMemoryFieldBuilder();
          getTeecValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (teecSharedMemoryBuilder_ == null) {
          teecSharedMemory_ = TeecSharedMemory.getDefaultInstance();
        } else {
          teecSharedMemoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (teecValueBuilder_ == null) {
          teecValue_ = TeecValue.getDefaultInstance();
        } else {
          teecValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor;
      }

      public TeecParameter getDefaultInstanceForType() {
        return TeecParameter.getDefaultInstance();
      }

      public TeecParameter build() {
        TeecParameter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecParameter buildPartial() {
        TeecParameter result = new TeecParameter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (teecSharedMemoryBuilder_ == null) {
          result.teecSharedMemory_ = teecSharedMemory_;
        } else {
          result.teecSharedMemory_ = teecSharedMemoryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (teecValueBuilder_ == null) {
          result.teecValue_ = teecValue_;
        } else {
          result.teecValue_ = teecValueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecParameter) {
          return mergeFrom((TeecParameter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecParameter other) {
        if (other == TeecParameter.getDefaultInstance()) return this;
        if (other.hasTeecSharedMemory()) {
          mergeTeecSharedMemory(other.getTeecSharedMemory());
        }
        if (other.hasTeecValue()) {
          mergeTeecValue(other.getTeecValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasTeecSharedMemory()) {
          if (!getTeecSharedMemory().isInitialized()) {
            
            return false;
          }
        }
        if (hasTeecValue()) {
          if (!getTeecValue().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecParameter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecParameter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private TeecSharedMemory teecSharedMemory_ = TeecSharedMemory.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder> teecSharedMemoryBuilder_;
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
       */
      public boolean hasTeecSharedMemory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
       */
      public TeecSharedMemory getTeecSharedMemory() {
        if (teecSharedMemoryBuilder_ == null) {
          return teecSharedMemory_;
        } else {
          return teecSharedMemoryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
       */
      public Builder setTeecSharedMemory(TeecSharedMemory value) {
        if (teecSharedMemoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teecSharedMemory_ = value;
          onChanged();
        } else {
          teecSharedMemoryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
       */
      public Builder setTeecSharedMemory(
          TeecSharedMemory.Builder builderForValue) {
        if (teecSharedMemoryBuilder_ == null) {
          teecSharedMemory_ = builderForValue.build();
          onChanged();
        } else {
          teecSharedMemoryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
       */
      public Builder mergeTeecSharedMemory(TeecSharedMemory value) {
        if (teecSharedMemoryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              teecSharedMemory_ != TeecSharedMemory.getDefaultInstance()) {
            teecSharedMemory_ =
              TeecSharedMemory.newBuilder(teecSharedMemory_).mergeFrom(value).buildPartial();
          } else {
            teecSharedMemory_ = value;
          }
          onChanged();
        } else {
          teecSharedMemoryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
       */
      public Builder clearTeecSharedMemory() {
        if (teecSharedMemoryBuilder_ == null) {
          teecSharedMemory_ = TeecSharedMemory.getDefaultInstance();
          onChanged();
        } else {
          teecSharedMemoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
       */
      public TeecSharedMemory.Builder getTeecSharedMemoryBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTeecSharedMemoryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
       */
      public TeecSharedMemoryOrBuilder getTeecSharedMemoryOrBuilder() {
        if (teecSharedMemoryBuilder_ != null) {
          return teecSharedMemoryBuilder_.getMessageOrBuilder();
        } else {
          return teecSharedMemory_;
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory teecSharedMemory = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder>
          getTeecSharedMemoryFieldBuilder() {
        if (teecSharedMemoryBuilder_ == null) {
          teecSharedMemoryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder>(
                  getTeecSharedMemory(),
                  getParentForChildren(),
                  isClean());
          teecSharedMemory_ = null;
        }
        return teecSharedMemoryBuilder_;
      }

      private TeecValue teecValue_ = TeecValue.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecValue, TeecValue.Builder, TeecValueOrBuilder> teecValueBuilder_;
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
       */
      public boolean hasTeecValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
       */
      public TeecValue getTeecValue() {
        if (teecValueBuilder_ == null) {
          return teecValue_;
        } else {
          return teecValueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
       */
      public Builder setTeecValue(TeecValue value) {
        if (teecValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teecValue_ = value;
          onChanged();
        } else {
          teecValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
       */
      public Builder setTeecValue(
          TeecValue.Builder builderForValue) {
        if (teecValueBuilder_ == null) {
          teecValue_ = builderForValue.build();
          onChanged();
        } else {
          teecValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
       */
      public Builder mergeTeecValue(TeecValue value) {
        if (teecValueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              teecValue_ != TeecValue.getDefaultInstance()) {
            teecValue_ =
              TeecValue.newBuilder(teecValue_).mergeFrom(value).buildPartial();
          } else {
            teecValue_ = value;
          }
          onChanged();
        } else {
          teecValueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
       */
      public Builder clearTeecValue() {
        if (teecValueBuilder_ == null) {
          teecValue_ = TeecValue.getDefaultInstance();
          onChanged();
        } else {
          teecValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
       */
      public TeecValue.Builder getTeecValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTeecValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
       */
      public TeecValueOrBuilder getTeecValueOrBuilder() {
        if (teecValueBuilder_ != null) {
          return teecValueBuilder_.getMessageOrBuilder();
        } else {
          return teecValue_;
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecValue, TeecValue.Builder, TeecValueOrBuilder>
          getTeecValueFieldBuilder() {
        if (teecValueBuilder_ == null) {
          teecValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecValue, TeecValue.Builder, TeecValueOrBuilder>(
                  getTeecValue(),
                  getParentForChildren(),
                  isClean());
          teecValue_ = null;
        }
        return teecValueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
    }

    static {
      defaultInstance = new TeecParameter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
  }

  public interface TeecSharedMemoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes mBuffer = 1;</code>
     */
    boolean hasMBuffer();
    /**
     * <code>required bytes mBuffer = 1;</code>
     */
    com.google.protobuf.ByteString getMBuffer();

    /**
     * <code>required int32 mFlag = 2;</code>
     */
    boolean hasMFlag();
    /**
     * <code>required int32 mFlag = 2;</code>
     */
    int getMFlag();

    /**
     * <code>optional int32 mReturnSize = 3;</code>
     */
    boolean hasMReturnSize();
    /**
     * <code>optional int32 mReturnSize = 3;</code>
     */
    int getMReturnSize();

    /**
     * <code>optional int32 mID = 4;</code>
     */
    boolean hasMID();
    /**
     * <code>optional int32 mID = 4;</code>
     */
    int getMID();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory}
   */
  public static final class TeecSharedMemory extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
      TeecSharedMemoryOrBuilder {
    // Use TeecSharedMemory.newBuilder() to construct.
    private TeecSharedMemory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecSharedMemory(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecSharedMemory defaultInstance;
    public static TeecSharedMemory getDefaultInstance() {
      return defaultInstance;
    }

    public TeecSharedMemory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecSharedMemory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              mBuffer_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mFlag_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mReturnSize_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              mID_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecSharedMemory.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecSharedMemory> PARSER =
        new com.google.protobuf.AbstractParser<TeecSharedMemory>() {
      public TeecSharedMemory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecSharedMemory(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecSharedMemory> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MBUFFER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString mBuffer_;
    /**
     * <code>required bytes mBuffer = 1;</code>
     */
    public boolean hasMBuffer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes mBuffer = 1;</code>
     */
    public com.google.protobuf.ByteString getMBuffer() {
      return mBuffer_;
    }

    public static final int MFLAG_FIELD_NUMBER = 2;
    private int mFlag_;
    /**
     * <code>required int32 mFlag = 2;</code>
     */
    public boolean hasMFlag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 mFlag = 2;</code>
     */
    public int getMFlag() {
      return mFlag_;
    }

    public static final int MRETURNSIZE_FIELD_NUMBER = 3;
    private int mReturnSize_;
    /**
     * <code>optional int32 mReturnSize = 3;</code>
     */
    public boolean hasMReturnSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 mReturnSize = 3;</code>
     */
    public int getMReturnSize() {
      return mReturnSize_;
    }

    public static final int MID_FIELD_NUMBER = 4;
    private int mID_;
    /**
     * <code>optional int32 mID = 4;</code>
     */
    public boolean hasMID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 mID = 4;</code>
     */
    public int getMID() {
      return mID_;
    }

    private void initFields() {
      mBuffer_ = com.google.protobuf.ByteString.EMPTY;
      mFlag_ = 0;
      mReturnSize_ = 0;
      mID_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMBuffer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, mBuffer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, mFlag_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, mReturnSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, mID_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, mBuffer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mFlag_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mReturnSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, mID_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecSharedMemory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecSharedMemory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecSharedMemory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecSharedMemory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecSharedMemory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
        TeecSharedMemoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecSharedMemory.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecSharedMemory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mBuffer_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        mFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mReturnSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        mID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor;
      }

      public TeecSharedMemory getDefaultInstanceForType() {
        return TeecSharedMemory.getDefaultInstance();
      }

      public TeecSharedMemory build() {
        TeecSharedMemory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecSharedMemory buildPartial() {
        TeecSharedMemory result = new TeecSharedMemory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mBuffer_ = mBuffer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mFlag_ = mFlag_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mReturnSize_ = mReturnSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mID_ = mID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecSharedMemory) {
          return mergeFrom((TeecSharedMemory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecSharedMemory other) {
        if (other == TeecSharedMemory.getDefaultInstance()) return this;
        if (other.hasMBuffer()) {
          setMBuffer(other.getMBuffer());
        }
        if (other.hasMFlag()) {
          setMFlag(other.getMFlag());
        }
        if (other.hasMReturnSize()) {
          setMReturnSize(other.getMReturnSize());
        }
        if (other.hasMID()) {
          setMID(other.getMID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMBuffer()) {
          
          return false;
        }
        if (!hasMFlag()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecSharedMemory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecSharedMemory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString mBuffer_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes mBuffer = 1;</code>
       */
      public boolean hasMBuffer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes mBuffer = 1;</code>
       */
      public com.google.protobuf.ByteString getMBuffer() {
        return mBuffer_;
      }
      /**
       * <code>required bytes mBuffer = 1;</code>
       */
      public Builder setMBuffer(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mBuffer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes mBuffer = 1;</code>
       */
      public Builder clearMBuffer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mBuffer_ = getDefaultInstance().getMBuffer();
        onChanged();
        return this;
      }

      private int mFlag_ ;
      /**
       * <code>required int32 mFlag = 2;</code>
       */
      public boolean hasMFlag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 mFlag = 2;</code>
       */
      public int getMFlag() {
        return mFlag_;
      }
      /**
       * <code>required int32 mFlag = 2;</code>
       */
      public Builder setMFlag(int value) {
        bitField0_ |= 0x00000002;
        mFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mFlag = 2;</code>
       */
      public Builder clearMFlag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mFlag_ = 0;
        onChanged();
        return this;
      }

      private int mReturnSize_ ;
      /**
       * <code>optional int32 mReturnSize = 3;</code>
       */
      public boolean hasMReturnSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 mReturnSize = 3;</code>
       */
      public int getMReturnSize() {
        return mReturnSize_;
      }
      /**
       * <code>optional int32 mReturnSize = 3;</code>
       */
      public Builder setMReturnSize(int value) {
        bitField0_ |= 0x00000004;
        mReturnSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mReturnSize = 3;</code>
       */
      public Builder clearMReturnSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mReturnSize_ = 0;
        onChanged();
        return this;
      }

      private int mID_ ;
      /**
       * <code>optional int32 mID = 4;</code>
       */
      public boolean hasMID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 mID = 4;</code>
       */
      public int getMID() {
        return mID_;
      }
      /**
       * <code>optional int32 mID = 4;</code>
       */
      public Builder setMID(int value) {
        bitField0_ |= 0x00000008;
        mID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mID = 4;</code>
       */
      public Builder clearMID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mID_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
    }

    static {
      defaultInstance = new TeecSharedMemory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
  }

  public interface TeecSharedMemoryReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    boolean hasParent();
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    TeecSharedMemory getParent();
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    TeecSharedMemoryOrBuilder getParentOrBuilder();

    /**
     * <code>required int32 mOffset = 2;</code>
     */
    boolean hasMOffset();
    /**
     * <code>required int32 mOffset = 2;</code>
     */
    int getMOffset();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference}
   */
  public static final class TeecSharedMemoryReference extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
      TeecSharedMemoryReferenceOrBuilder {
    // Use TeecSharedMemoryReference.newBuilder() to construct.
    private TeecSharedMemoryReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecSharedMemoryReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecSharedMemoryReference defaultInstance;
    public static TeecSharedMemoryReference getDefaultInstance() {
      return defaultInstance;
    }

    public TeecSharedMemoryReference getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecSharedMemoryReference(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              TeecSharedMemory.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = parent_.toBuilder();
              }
              parent_ = input.readMessage(TeecSharedMemory.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parent_);
                parent_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mOffset_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecSharedMemoryReference.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecSharedMemoryReference> PARSER =
        new com.google.protobuf.AbstractParser<TeecSharedMemoryReference>() {
      public TeecSharedMemoryReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecSharedMemoryReference(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecSharedMemoryReference> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PARENT_FIELD_NUMBER = 1;
    private TeecSharedMemory parent_;
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    public boolean hasParent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    public TeecSharedMemory getParent() {
      return parent_;
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    public TeecSharedMemoryOrBuilder getParentOrBuilder() {
      return parent_;
    }

    public static final int MOFFSET_FIELD_NUMBER = 2;
    private int mOffset_;
    /**
     * <code>required int32 mOffset = 2;</code>
     */
    public boolean hasMOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 mOffset = 2;</code>
     */
    public int getMOffset() {
      return mOffset_;
    }

    private void initFields() {
      parent_ = TeecSharedMemory.getDefaultInstance();
      mOffset_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasParent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getParent().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, parent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, mOffset_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, parent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mOffset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecSharedMemoryReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemoryReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemoryReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemoryReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemoryReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemoryReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecSharedMemoryReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecSharedMemoryReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecSharedMemoryReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemoryReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecSharedMemoryReference prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
        TeecSharedMemoryReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecSharedMemoryReference.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecSharedMemoryReference.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (parentBuilder_ == null) {
          parent_ = TeecSharedMemory.getDefaultInstance();
        } else {
          parentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        mOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor;
      }

      public TeecSharedMemoryReference getDefaultInstanceForType() {
        return TeecSharedMemoryReference.getDefaultInstance();
      }

      public TeecSharedMemoryReference build() {
        TeecSharedMemoryReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecSharedMemoryReference buildPartial() {
        TeecSharedMemoryReference result = new TeecSharedMemoryReference(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (parentBuilder_ == null) {
          result.parent_ = parent_;
        } else {
          result.parent_ = parentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mOffset_ = mOffset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecSharedMemoryReference) {
          return mergeFrom((TeecSharedMemoryReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecSharedMemoryReference other) {
        if (other == TeecSharedMemoryReference.getDefaultInstance()) return this;
        if (other.hasParent()) {
          mergeParent(other.getParent());
        }
        if (other.hasMOffset()) {
          setMOffset(other.getMOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasParent()) {
          
          return false;
        }
        if (!hasMOffset()) {
          
          return false;
        }
        if (!getParent().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecSharedMemoryReference parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecSharedMemoryReference) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private TeecSharedMemory parent_ = TeecSharedMemory.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder> parentBuilder_;
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public boolean hasParent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public TeecSharedMemory getParent() {
        if (parentBuilder_ == null) {
          return parent_;
        } else {
          return parentBuilder_.getMessage();
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public Builder setParent(TeecSharedMemory value) {
        if (parentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parent_ = value;
          onChanged();
        } else {
          parentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public Builder setParent(
          TeecSharedMemory.Builder builderForValue) {
        if (parentBuilder_ == null) {
          parent_ = builderForValue.build();
          onChanged();
        } else {
          parentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public Builder mergeParent(TeecSharedMemory value) {
        if (parentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              parent_ != TeecSharedMemory.getDefaultInstance()) {
            parent_ =
              TeecSharedMemory.newBuilder(parent_).mergeFrom(value).buildPartial();
          } else {
            parent_ = value;
          }
          onChanged();
        } else {
          parentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public Builder clearParent() {
        if (parentBuilder_ == null) {
          parent_ = TeecSharedMemory.getDefaultInstance();
          onChanged();
        } else {
          parentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public TeecSharedMemory.Builder getParentBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getParentFieldBuilder().getBuilder();
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public TeecSharedMemoryOrBuilder getParentOrBuilder() {
        if (parentBuilder_ != null) {
          return parentBuilder_.getMessageOrBuilder();
        } else {
          return parent_;
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder>
          getParentFieldBuilder() {
        if (parentBuilder_ == null) {
          parentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder>(
                  getParent(),
                  getParentForChildren(),
                  isClean());
          parent_ = null;
        }
        return parentBuilder_;
      }

      private int mOffset_ ;
      /**
       * <code>required int32 mOffset = 2;</code>
       */
      public boolean hasMOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 mOffset = 2;</code>
       */
      public int getMOffset() {
        return mOffset_;
      }
      /**
       * <code>required int32 mOffset = 2;</code>
       */
      public Builder setMOffset(int value) {
        bitField0_ |= 0x00000002;
        mOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mOffset = 2;</code>
       */
      public Builder clearMOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mOffset_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
    }

    static {
      defaultInstance = new TeecSharedMemoryReference(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
  }

  public interface TeecValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 a = 1;</code>
     */
    boolean hasA();
    /**
     * <code>required int32 a = 1;</code>
     */
    int getA();

    /**
     * <code>required int32 b = 2;</code>
     */
    boolean hasB();
    /**
     * <code>required int32 b = 2;</code>
     */
    int getB();

    /**
     * <code>required int32 mFlag = 3;</code>
     */
    boolean hasMFlag();
    /**
     * <code>required int32 mFlag = 3;</code>
     */
    int getMFlag();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue}
   */
  public static final class TeecValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
      TeecValueOrBuilder {
    // Use TeecValue.newBuilder() to construct.
    private TeecValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecValue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecValue defaultInstance;
    public static TeecValue getDefaultInstance() {
      return defaultInstance;
    }

    public TeecValue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              a_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              b_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mFlag_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecValue.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecValue> PARSER =
        new com.google.protobuf.AbstractParser<TeecValue>() {
      public TeecValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecValue(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecValue> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int A_FIELD_NUMBER = 1;
    private int a_;
    /**
     * <code>required int32 a = 1;</code>
     */
    public boolean hasA() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 a = 1;</code>
     */
    public int getA() {
      return a_;
    }

    public static final int B_FIELD_NUMBER = 2;
    private int b_;
    /**
     * <code>required int32 b = 2;</code>
     */
    public boolean hasB() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 b = 2;</code>
     */
    public int getB() {
      return b_;
    }

    public static final int MFLAG_FIELD_NUMBER = 3;
    private int mFlag_;
    /**
     * <code>required int32 mFlag = 3;</code>
     */
    public boolean hasMFlag() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 mFlag = 3;</code>
     */
    public int getMFlag() {
      return mFlag_;
    }

    private void initFields() {
      a_ = 0;
      b_ = 0;
      mFlag_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasA()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, a_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, b_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, mFlag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, a_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, b_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mFlag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
        TeecValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecValue.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        a_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        b_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor;
      }

      public TeecValue getDefaultInstanceForType() {
        return TeecValue.getDefaultInstance();
      }

      public TeecValue build() {
        TeecValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecValue buildPartial() {
        TeecValue result = new TeecValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.a_ = a_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.b_ = b_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mFlag_ = mFlag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecValue) {
          return mergeFrom((TeecValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecValue other) {
        if (other == TeecValue.getDefaultInstance()) return this;
        if (other.hasA()) {
          setA(other.getA());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        if (other.hasMFlag()) {
          setMFlag(other.getMFlag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasA()) {
          
          return false;
        }
        if (!hasB()) {
          
          return false;
        }
        if (!hasMFlag()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecValue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int a_ ;
      /**
       * <code>required int32 a = 1;</code>
       */
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 a = 1;</code>
       */
      public int getA() {
        return a_;
      }
      /**
       * <code>required int32 a = 1;</code>
       */
      public Builder setA(int value) {
        bitField0_ |= 0x00000001;
        a_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 a = 1;</code>
       */
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        a_ = 0;
        onChanged();
        return this;
      }

      private int b_ ;
      /**
       * <code>required int32 b = 2;</code>
       */
      public boolean hasB() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 b = 2;</code>
       */
      public int getB() {
        return b_;
      }
      /**
       * <code>required int32 b = 2;</code>
       */
      public Builder setB(int value) {
        bitField0_ |= 0x00000002;
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 b = 2;</code>
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = 0;
        onChanged();
        return this;
      }

      private int mFlag_ ;
      /**
       * <code>required int32 mFlag = 3;</code>
       */
      public boolean hasMFlag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 mFlag = 3;</code>
       */
      public int getMFlag() {
        return mFlag_;
      }
      /**
       * <code>required int32 mFlag = 3;</code>
       */
      public Builder setMFlag(int value) {
        bitField0_ |= 0x00000004;
        mFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mFlag = 3;</code>
       */
      public Builder clearMFlag() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mFlag_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
    }

    static {
      defaultInstance = new TeecValue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021GPDataTypes.proto\022%fi.aalto.ssg.opente" +
      "e.imps.pbdatatypes\"h\n\rTeecOperation\022\020\n\010m" +
      "Started\030\001 \002(\005\022E\n\007mParams\030\002 \002(\01324.fi.aalt" +
      "o.ssg.opentee.imps.pbdatatypes.TeecParam" +
      "eter\"\247\001\n\rTeecParameter\022Q\n\020teecSharedMemo" +
      "ry\030\001 \001(\01327.fi.aalto.ssg.opentee.imps.pbd" +
      "atatypes.TeecSharedMemory\022C\n\tteecValue\030\002" +
      " \001(\01320.fi.aalto.ssg.opentee.imps.pbdatat" +
      "ypes.TeecValue\"T\n\020TeecSharedMemory\022\017\n\007mB" +
      "uffer\030\001 \002(\014\022\r\n\005mFlag\030\002 \002(\005\022\023\n\013mReturnSiz",
      "e\030\003 \001(\005\022\013\n\003mID\030\004 \001(\005\"u\n\031TeecSharedMemory" +
      "Reference\022G\n\006parent\030\001 \002(\01327.fi.aalto.ssg" +
      ".opentee.imps.pbdatatypes.TeecSharedMemo" +
      "ry\022\017\n\007mOffset\030\002 \002(\005\"0\n\tTeecValue\022\t\n\001a\030\001 " +
      "\002(\005\022\t\n\001b\030\002 \002(\005\022\r\n\005mFlag\030\003 \002(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor,
        new String[] { "MStarted", "MParams", });
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor,
        new String[] { "TeecSharedMemory", "TeecValue", });
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor,
        new String[] { "MBuffer", "MFlag", "MReturnSize", "MID", });
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor,
        new String[] { "Parent", "MOffset", });
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor,
        new String[] { "A", "B", "MFlag", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
