// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GPDataTypes.proto

package fi.aalto.ssg.opentee.imps.pbdatatypes;

public final class GPDataTypes {
  private GPDataTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TeecOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 mStarted = 1;</code>
     */
    boolean hasMStarted();
    /**
     * <code>required int32 mStarted = 1;</code>
     */
    int getMStarted();

    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    java.util.List<TeecParameter>
        getMParamsList();
    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    TeecParameter getMParams(int index);
    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    int getMParamsCount();
    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    java.util.List<? extends TeecParameterOrBuilder>
        getMParamsOrBuilderList();
    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    TeecParameterOrBuilder getMParamsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation}
   */
  public static final class TeecOperation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
      TeecOperationOrBuilder {
    // Use TeecOperation.newBuilder() to construct.
    private TeecOperation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecOperation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecOperation defaultInstance;
    public static TeecOperation getDefaultInstance() {
      return defaultInstance;
    }

    public TeecOperation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecOperation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mStarted_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                mParams_ = new java.util.ArrayList<TeecParameter>();
                mutable_bitField0_ |= 0x00000002;
              }
              mParams_.add(input.readMessage(TeecParameter.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          mParams_ = java.util.Collections.unmodifiableList(mParams_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecOperation.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecOperation> PARSER =
        new com.google.protobuf.AbstractParser<TeecOperation>() {
      public TeecOperation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecOperation(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecOperation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MSTARTED_FIELD_NUMBER = 1;
    private int mStarted_;
    /**
     * <code>required int32 mStarted = 1;</code>
     */
    public boolean hasMStarted() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 mStarted = 1;</code>
     */
    public int getMStarted() {
      return mStarted_;
    }

    public static final int MPARAMS_FIELD_NUMBER = 2;
    private java.util.List<TeecParameter> mParams_;
    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public java.util.List<TeecParameter> getMParamsList() {
      return mParams_;
    }
    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public java.util.List<? extends TeecParameterOrBuilder>
        getMParamsOrBuilderList() {
      return mParams_;
    }
    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public int getMParamsCount() {
      return mParams_.size();
    }
    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public TeecParameter getMParams(int index) {
      return mParams_.get(index);
    }
    /**
     * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
     */
    public TeecParameterOrBuilder getMParamsOrBuilder(
        int index) {
      return mParams_.get(index);
    }

    private void initFields() {
      mStarted_ = 0;
      mParams_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMStarted()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMParamsCount(); i++) {
        if (!getMParams(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mStarted_);
      }
      for (int i = 0; i < mParams_.size(); i++) {
        output.writeMessage(2, mParams_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mStarted_);
      }
      for (int i = 0; i < mParams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mParams_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecOperation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
        TeecOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecOperation.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecOperation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMParamsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mStarted_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (mParamsBuilder_ == null) {
          mParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          mParamsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor;
      }

      public TeecOperation getDefaultInstanceForType() {
        return TeecOperation.getDefaultInstance();
      }

      public TeecOperation build() {
        TeecOperation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecOperation buildPartial() {
        TeecOperation result = new TeecOperation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mStarted_ = mStarted_;
        if (mParamsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            mParams_ = java.util.Collections.unmodifiableList(mParams_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.mParams_ = mParams_;
        } else {
          result.mParams_ = mParamsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecOperation) {
          return mergeFrom((TeecOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecOperation other) {
        if (other == TeecOperation.getDefaultInstance()) return this;
        if (other.hasMStarted()) {
          setMStarted(other.getMStarted());
        }
        if (mParamsBuilder_ == null) {
          if (!other.mParams_.isEmpty()) {
            if (mParams_.isEmpty()) {
              mParams_ = other.mParams_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMParamsIsMutable();
              mParams_.addAll(other.mParams_);
            }
            onChanged();
          }
        } else {
          if (!other.mParams_.isEmpty()) {
            if (mParamsBuilder_.isEmpty()) {
              mParamsBuilder_.dispose();
              mParamsBuilder_ = null;
              mParams_ = other.mParams_;
              bitField0_ = (bitField0_ & ~0x00000002);
              mParamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMParamsFieldBuilder() : null;
            } else {
              mParamsBuilder_.addAllMessages(other.mParams_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMStarted()) {
          
          return false;
        }
        for (int i = 0; i < getMParamsCount(); i++) {
          if (!getMParams(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecOperation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecOperation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mStarted_ ;
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public boolean hasMStarted() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public int getMStarted() {
        return mStarted_;
      }
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public Builder setMStarted(int value) {
        bitField0_ |= 0x00000001;
        mStarted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mStarted = 1;</code>
       */
      public Builder clearMStarted() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mStarted_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<TeecParameter> mParams_ =
        java.util.Collections.emptyList();
      private void ensureMParamsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          mParams_ = new java.util.ArrayList<TeecParameter>(mParams_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          TeecParameter, TeecParameter.Builder, TeecParameterOrBuilder> mParamsBuilder_;

      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public java.util.List<TeecParameter> getMParamsList() {
        if (mParamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mParams_);
        } else {
          return mParamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public int getMParamsCount() {
        if (mParamsBuilder_ == null) {
          return mParams_.size();
        } else {
          return mParamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameter getMParams(int index) {
        if (mParamsBuilder_ == null) {
          return mParams_.get(index);
        } else {
          return mParamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder setMParams(
          int index, TeecParameter value) {
        if (mParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMParamsIsMutable();
          mParams_.set(index, value);
          onChanged();
        } else {
          mParamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder setMParams(
          int index, TeecParameter.Builder builderForValue) {
        if (mParamsBuilder_ == null) {
          ensureMParamsIsMutable();
          mParams_.set(index, builderForValue.build());
          onChanged();
        } else {
          mParamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder addMParams(TeecParameter value) {
        if (mParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMParamsIsMutable();
          mParams_.add(value);
          onChanged();
        } else {
          mParamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder addMParams(
          int index, TeecParameter value) {
        if (mParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMParamsIsMutable();
          mParams_.add(index, value);
          onChanged();
        } else {
          mParamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder addMParams(
          TeecParameter.Builder builderForValue) {
        if (mParamsBuilder_ == null) {
          ensureMParamsIsMutable();
          mParams_.add(builderForValue.build());
          onChanged();
        } else {
          mParamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder addMParams(
          int index, TeecParameter.Builder builderForValue) {
        if (mParamsBuilder_ == null) {
          ensureMParamsIsMutable();
          mParams_.add(index, builderForValue.build());
          onChanged();
        } else {
          mParamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder addAllMParams(
          Iterable<? extends TeecParameter> values) {
        if (mParamsBuilder_ == null) {
          ensureMParamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mParams_);
          onChanged();
        } else {
          mParamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder clearMParams() {
        if (mParamsBuilder_ == null) {
          mParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          mParamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public Builder removeMParams(int index) {
        if (mParamsBuilder_ == null) {
          ensureMParamsIsMutable();
          mParams_.remove(index);
          onChanged();
        } else {
          mParamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameter.Builder getMParamsBuilder(
          int index) {
        return getMParamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameterOrBuilder getMParamsOrBuilder(
          int index) {
        if (mParamsBuilder_ == null) {
          return mParams_.get(index);  } else {
          return mParamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public java.util.List<? extends TeecParameterOrBuilder>
           getMParamsOrBuilderList() {
        if (mParamsBuilder_ != null) {
          return mParamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mParams_);
        }
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameter.Builder addMParamsBuilder() {
        return getMParamsFieldBuilder().addBuilder(
            TeecParameter.getDefaultInstance());
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public TeecParameter.Builder addMParamsBuilder(
          int index) {
        return getMParamsFieldBuilder().addBuilder(
            index, TeecParameter.getDefaultInstance());
      }
      /**
       * <code>repeated .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter mParams = 2;</code>
       */
      public java.util.List<TeecParameter.Builder>
           getMParamsBuilderList() {
        return getMParamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          TeecParameter, TeecParameter.Builder, TeecParameterOrBuilder>
          getMParamsFieldBuilder() {
        if (mParamsBuilder_ == null) {
          mParamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              TeecParameter, TeecParameter.Builder, TeecParameterOrBuilder>(
                  mParams_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          mParams_ = null;
        }
        return mParamsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
    }

    static {
      defaultInstance = new TeecOperation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecOperation)
  }

  public interface TeecParameterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type type = 1;</code>
     */
    TeecParameter.Type getType();

    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
     */
    boolean hasTeecSharedMemoryReference();
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
     */
    TeecSharedMemoryReference getTeecSharedMemoryReference();
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
     */
    TeecSharedMemoryReferenceOrBuilder getTeecSharedMemoryReferenceOrBuilder();

    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    boolean hasTeecValue();
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    TeecValue getTeecValue();
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    TeecValueOrBuilder getTeecValueOrBuilder();

    /**
     * <code>optional int32 placeHolder = 4;</code>
     */
    boolean hasPlaceHolder();
    /**
     * <code>optional int32 placeHolder = 4;</code>
     */
    int getPlaceHolder();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter}
   */
  public static final class TeecParameter extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
      TeecParameterOrBuilder {
    // Use TeecParameter.newBuilder() to construct.
    private TeecParameter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecParameter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecParameter defaultInstance;
    public static TeecParameter getDefaultInstance() {
      return defaultInstance;
    }

    public TeecParameter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecParameter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              Type value = Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              TeecSharedMemoryReference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = teecSharedMemoryReference_.toBuilder();
              }
              teecSharedMemoryReference_ = input.readMessage(TeecSharedMemoryReference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teecSharedMemoryReference_);
                teecSharedMemoryReference_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              TeecValue.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = teecValue_.toBuilder();
              }
              teecValue_ = input.readMessage(TeecValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teecValue_);
                teecValue_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              placeHolder_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecParameter.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecParameter> PARSER =
        new com.google.protobuf.AbstractParser<TeecParameter>() {
      public TeecParameter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecParameter(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecParameter> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>smr = 1;</code>
       */
      smr(0, 1),
      /**
       * <code>val = 2;</code>
       */
      val(1, 2),
      /**
       * <code>empty = 3;</code>
       */
      empty(2, 3),
      ;

      /**
       * <code>smr = 1;</code>
       */
      public static final int smr_VALUE = 1;
      /**
       * <code>val = 2;</code>
       */
      public static final int val_VALUE = 2;
      /**
       * <code>empty = 3;</code>
       */
      public static final int empty_VALUE = 3;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 1: return smr;
          case 2: return val;
          case 3: return empty;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return TeecParameter.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private Type type_;
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type type = 1;</code>
     */
    public Type getType() {
      return type_;
    }

    public static final int TEECSHAREDMEMORYREFERENCE_FIELD_NUMBER = 2;
    private TeecSharedMemoryReference teecSharedMemoryReference_;
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
     */
    public boolean hasTeecSharedMemoryReference() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
     */
    public TeecSharedMemoryReference getTeecSharedMemoryReference() {
      return teecSharedMemoryReference_;
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
     */
    public TeecSharedMemoryReferenceOrBuilder getTeecSharedMemoryReferenceOrBuilder() {
      return teecSharedMemoryReference_;
    }

    public static final int TEECVALUE_FIELD_NUMBER = 3;
    private TeecValue teecValue_;
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    public boolean hasTeecValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    public TeecValue getTeecValue() {
      return teecValue_;
    }
    /**
     * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
     */
    public TeecValueOrBuilder getTeecValueOrBuilder() {
      return teecValue_;
    }

    public static final int PLACEHOLDER_FIELD_NUMBER = 4;
    private int placeHolder_;
    /**
     * <code>optional int32 placeHolder = 4;</code>
     */
    public boolean hasPlaceHolder() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 placeHolder = 4;</code>
     */
    public int getPlaceHolder() {
      return placeHolder_;
    }

    private void initFields() {
      type_ = Type.smr;
      teecSharedMemoryReference_ = TeecSharedMemoryReference.getDefaultInstance();
      teecValue_ = TeecValue.getDefaultInstance();
      placeHolder_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTeecSharedMemoryReference()) {
        if (!getTeecSharedMemoryReference().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTeecValue()) {
        if (!getTeecValue().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, teecSharedMemoryReference_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, teecValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, placeHolder_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, teecSharedMemoryReference_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, teecValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, placeHolder_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecParameter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecParameter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecParameter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecParameter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecParameter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecParameter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecParameter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecParameter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecParameter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecParameter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecParameter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
        TeecParameterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecParameter.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecParameter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeecSharedMemoryReferenceFieldBuilder();
          getTeecValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = Type.smr;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (teecSharedMemoryReferenceBuilder_ == null) {
          teecSharedMemoryReference_ = TeecSharedMemoryReference.getDefaultInstance();
        } else {
          teecSharedMemoryReferenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (teecValueBuilder_ == null) {
          teecValue_ = TeecValue.getDefaultInstance();
        } else {
          teecValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        placeHolder_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor;
      }

      public TeecParameter getDefaultInstanceForType() {
        return TeecParameter.getDefaultInstance();
      }

      public TeecParameter build() {
        TeecParameter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecParameter buildPartial() {
        TeecParameter result = new TeecParameter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (teecSharedMemoryReferenceBuilder_ == null) {
          result.teecSharedMemoryReference_ = teecSharedMemoryReference_;
        } else {
          result.teecSharedMemoryReference_ = teecSharedMemoryReferenceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (teecValueBuilder_ == null) {
          result.teecValue_ = teecValue_;
        } else {
          result.teecValue_ = teecValueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.placeHolder_ = placeHolder_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecParameter) {
          return mergeFrom((TeecParameter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecParameter other) {
        if (other == TeecParameter.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTeecSharedMemoryReference()) {
          mergeTeecSharedMemoryReference(other.getTeecSharedMemoryReference());
        }
        if (other.hasTeecValue()) {
          mergeTeecValue(other.getTeecValue());
        }
        if (other.hasPlaceHolder()) {
          setPlaceHolder(other.getPlaceHolder());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasTeecSharedMemoryReference()) {
          if (!getTeecSharedMemoryReference().isInitialized()) {
            
            return false;
          }
        }
        if (hasTeecValue()) {
          if (!getTeecValue().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecParameter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecParameter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Type type_ = Type.smr;
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type type = 1;</code>
       */
      public Type getType() {
        return type_;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type type = 1;</code>
       */
      public Builder setType(Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter.Type type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = Type.smr;
        onChanged();
        return this;
      }

      private TeecSharedMemoryReference teecSharedMemoryReference_ = TeecSharedMemoryReference.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemoryReference, TeecSharedMemoryReference.Builder, TeecSharedMemoryReferenceOrBuilder> teecSharedMemoryReferenceBuilder_;
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
       */
      public boolean hasTeecSharedMemoryReference() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
       */
      public TeecSharedMemoryReference getTeecSharedMemoryReference() {
        if (teecSharedMemoryReferenceBuilder_ == null) {
          return teecSharedMemoryReference_;
        } else {
          return teecSharedMemoryReferenceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
       */
      public Builder setTeecSharedMemoryReference(TeecSharedMemoryReference value) {
        if (teecSharedMemoryReferenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teecSharedMemoryReference_ = value;
          onChanged();
        } else {
          teecSharedMemoryReferenceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
       */
      public Builder setTeecSharedMemoryReference(
          TeecSharedMemoryReference.Builder builderForValue) {
        if (teecSharedMemoryReferenceBuilder_ == null) {
          teecSharedMemoryReference_ = builderForValue.build();
          onChanged();
        } else {
          teecSharedMemoryReferenceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
       */
      public Builder mergeTeecSharedMemoryReference(TeecSharedMemoryReference value) {
        if (teecSharedMemoryReferenceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              teecSharedMemoryReference_ != TeecSharedMemoryReference.getDefaultInstance()) {
            teecSharedMemoryReference_ =
              TeecSharedMemoryReference.newBuilder(teecSharedMemoryReference_).mergeFrom(value).buildPartial();
          } else {
            teecSharedMemoryReference_ = value;
          }
          onChanged();
        } else {
          teecSharedMemoryReferenceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
       */
      public Builder clearTeecSharedMemoryReference() {
        if (teecSharedMemoryReferenceBuilder_ == null) {
          teecSharedMemoryReference_ = TeecSharedMemoryReference.getDefaultInstance();
          onChanged();
        } else {
          teecSharedMemoryReferenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
       */
      public TeecSharedMemoryReference.Builder getTeecSharedMemoryReferenceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTeecSharedMemoryReferenceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
       */
      public TeecSharedMemoryReferenceOrBuilder getTeecSharedMemoryReferenceOrBuilder() {
        if (teecSharedMemoryReferenceBuilder_ != null) {
          return teecSharedMemoryReferenceBuilder_.getMessageOrBuilder();
        } else {
          return teecSharedMemoryReference_;
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference teecSharedMemoryReference = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemoryReference, TeecSharedMemoryReference.Builder, TeecSharedMemoryReferenceOrBuilder>
          getTeecSharedMemoryReferenceFieldBuilder() {
        if (teecSharedMemoryReferenceBuilder_ == null) {
          teecSharedMemoryReferenceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecSharedMemoryReference, TeecSharedMemoryReference.Builder, TeecSharedMemoryReferenceOrBuilder>(
                  getTeecSharedMemoryReference(),
                  getParentForChildren(),
                  isClean());
          teecSharedMemoryReference_ = null;
        }
        return teecSharedMemoryReferenceBuilder_;
      }

      private TeecValue teecValue_ = TeecValue.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecValue, TeecValue.Builder, TeecValueOrBuilder> teecValueBuilder_;
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public boolean hasTeecValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public TeecValue getTeecValue() {
        if (teecValueBuilder_ == null) {
          return teecValue_;
        } else {
          return teecValueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public Builder setTeecValue(TeecValue value) {
        if (teecValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teecValue_ = value;
          onChanged();
        } else {
          teecValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public Builder setTeecValue(
          TeecValue.Builder builderForValue) {
        if (teecValueBuilder_ == null) {
          teecValue_ = builderForValue.build();
          onChanged();
        } else {
          teecValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public Builder mergeTeecValue(TeecValue value) {
        if (teecValueBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              teecValue_ != TeecValue.getDefaultInstance()) {
            teecValue_ =
              TeecValue.newBuilder(teecValue_).mergeFrom(value).buildPartial();
          } else {
            teecValue_ = value;
          }
          onChanged();
        } else {
          teecValueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public Builder clearTeecValue() {
        if (teecValueBuilder_ == null) {
          teecValue_ = TeecValue.getDefaultInstance();
          onChanged();
        } else {
          teecValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public TeecValue.Builder getTeecValueBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTeecValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      public TeecValueOrBuilder getTeecValueOrBuilder() {
        if (teecValueBuilder_ != null) {
          return teecValueBuilder_.getMessageOrBuilder();
        } else {
          return teecValue_;
        }
      }
      /**
       * <code>optional .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue teecValue = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecValue, TeecValue.Builder, TeecValueOrBuilder>
          getTeecValueFieldBuilder() {
        if (teecValueBuilder_ == null) {
          teecValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecValue, TeecValue.Builder, TeecValueOrBuilder>(
                  getTeecValue(),
                  getParentForChildren(),
                  isClean());
          teecValue_ = null;
        }
        return teecValueBuilder_;
      }

      private int placeHolder_ ;
      /**
       * <code>optional int32 placeHolder = 4;</code>
       */
      public boolean hasPlaceHolder() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 placeHolder = 4;</code>
       */
      public int getPlaceHolder() {
        return placeHolder_;
      }
      /**
       * <code>optional int32 placeHolder = 4;</code>
       */
      public Builder setPlaceHolder(int value) {
        bitField0_ |= 0x00000008;
        placeHolder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 placeHolder = 4;</code>
       */
      public Builder clearPlaceHolder() {
        bitField0_ = (bitField0_ & ~0x00000008);
        placeHolder_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
    }

    static {
      defaultInstance = new TeecParameter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecParameter)
  }

  public interface TeecSharedMemoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes mBuffer = 1;</code>
     */
    boolean hasMBuffer();
    /**
     * <code>required bytes mBuffer = 1;</code>
     */
    com.google.protobuf.ByteString getMBuffer();

    /**
     * <code>required int32 mFlag = 2;</code>
     */
    boolean hasMFlag();
    /**
     * <code>required int32 mFlag = 2;</code>
     */
    int getMFlag();

    /**
     * <code>required int32 size = 3;</code>
     */
    boolean hasSize();
    /**
     * <code>required int32 size = 3;</code>
     */
    int getSize();

    /**
     * <code>optional int32 mReturnSize = 4;</code>
     */
    boolean hasMReturnSize();
    /**
     * <code>optional int32 mReturnSize = 4;</code>
     */
    int getMReturnSize();

    /**
     * <code>optional int32 mID = 5;</code>
     */
    boolean hasMID();
    /**
     * <code>optional int32 mID = 5;</code>
     */
    int getMID();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory}
   */
  public static final class TeecSharedMemory extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
      TeecSharedMemoryOrBuilder {
    // Use TeecSharedMemory.newBuilder() to construct.
    private TeecSharedMemory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecSharedMemory(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecSharedMemory defaultInstance;
    public static TeecSharedMemory getDefaultInstance() {
      return defaultInstance;
    }

    public TeecSharedMemory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecSharedMemory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              mBuffer_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mFlag_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              size_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              mReturnSize_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              mID_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecSharedMemory.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecSharedMemory> PARSER =
        new com.google.protobuf.AbstractParser<TeecSharedMemory>() {
      public TeecSharedMemory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecSharedMemory(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecSharedMemory> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MBUFFER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString mBuffer_;
    /**
     * <code>required bytes mBuffer = 1;</code>
     */
    public boolean hasMBuffer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes mBuffer = 1;</code>
     */
    public com.google.protobuf.ByteString getMBuffer() {
      return mBuffer_;
    }

    public static final int MFLAG_FIELD_NUMBER = 2;
    private int mFlag_;
    /**
     * <code>required int32 mFlag = 2;</code>
     */
    public boolean hasMFlag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 mFlag = 2;</code>
     */
    public int getMFlag() {
      return mFlag_;
    }

    public static final int SIZE_FIELD_NUMBER = 3;
    private int size_;
    /**
     * <code>required int32 size = 3;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 size = 3;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int MRETURNSIZE_FIELD_NUMBER = 4;
    private int mReturnSize_;
    /**
     * <code>optional int32 mReturnSize = 4;</code>
     */
    public boolean hasMReturnSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 mReturnSize = 4;</code>
     */
    public int getMReturnSize() {
      return mReturnSize_;
    }

    public static final int MID_FIELD_NUMBER = 5;
    private int mID_;
    /**
     * <code>optional int32 mID = 5;</code>
     */
    public boolean hasMID() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 mID = 5;</code>
     */
    public int getMID() {
      return mID_;
    }

    private void initFields() {
      mBuffer_ = com.google.protobuf.ByteString.EMPTY;
      mFlag_ = 0;
      size_ = 0;
      mReturnSize_ = 0;
      mID_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMBuffer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, mBuffer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, mFlag_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, mReturnSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, mID_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, mBuffer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mFlag_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, mReturnSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mID_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecSharedMemory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecSharedMemory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecSharedMemory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecSharedMemory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecSharedMemory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
        TeecSharedMemoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecSharedMemory.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecSharedMemory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mBuffer_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        mFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        mReturnSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor;
      }

      public TeecSharedMemory getDefaultInstanceForType() {
        return TeecSharedMemory.getDefaultInstance();
      }

      public TeecSharedMemory build() {
        TeecSharedMemory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecSharedMemory buildPartial() {
        TeecSharedMemory result = new TeecSharedMemory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mBuffer_ = mBuffer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mFlag_ = mFlag_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mReturnSize_ = mReturnSize_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mID_ = mID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecSharedMemory) {
          return mergeFrom((TeecSharedMemory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecSharedMemory other) {
        if (other == TeecSharedMemory.getDefaultInstance()) return this;
        if (other.hasMBuffer()) {
          setMBuffer(other.getMBuffer());
        }
        if (other.hasMFlag()) {
          setMFlag(other.getMFlag());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasMReturnSize()) {
          setMReturnSize(other.getMReturnSize());
        }
        if (other.hasMID()) {
          setMID(other.getMID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMBuffer()) {
          
          return false;
        }
        if (!hasMFlag()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecSharedMemory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecSharedMemory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString mBuffer_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes mBuffer = 1;</code>
       */
      public boolean hasMBuffer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes mBuffer = 1;</code>
       */
      public com.google.protobuf.ByteString getMBuffer() {
        return mBuffer_;
      }
      /**
       * <code>required bytes mBuffer = 1;</code>
       */
      public Builder setMBuffer(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mBuffer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes mBuffer = 1;</code>
       */
      public Builder clearMBuffer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mBuffer_ = getDefaultInstance().getMBuffer();
        onChanged();
        return this;
      }

      private int mFlag_ ;
      /**
       * <code>required int32 mFlag = 2;</code>
       */
      public boolean hasMFlag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 mFlag = 2;</code>
       */
      public int getMFlag() {
        return mFlag_;
      }
      /**
       * <code>required int32 mFlag = 2;</code>
       */
      public Builder setMFlag(int value) {
        bitField0_ |= 0x00000002;
        mFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mFlag = 2;</code>
       */
      public Builder clearMFlag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mFlag_ = 0;
        onChanged();
        return this;
      }

      private int size_ ;
      /**
       * <code>required int32 size = 3;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 size = 3;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>required int32 size = 3;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000004;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 size = 3;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0;
        onChanged();
        return this;
      }

      private int mReturnSize_ ;
      /**
       * <code>optional int32 mReturnSize = 4;</code>
       */
      public boolean hasMReturnSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 mReturnSize = 4;</code>
       */
      public int getMReturnSize() {
        return mReturnSize_;
      }
      /**
       * <code>optional int32 mReturnSize = 4;</code>
       */
      public Builder setMReturnSize(int value) {
        bitField0_ |= 0x00000008;
        mReturnSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mReturnSize = 4;</code>
       */
      public Builder clearMReturnSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mReturnSize_ = 0;
        onChanged();
        return this;
      }

      private int mID_ ;
      /**
       * <code>optional int32 mID = 5;</code>
       */
      public boolean hasMID() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 mID = 5;</code>
       */
      public int getMID() {
        return mID_;
      }
      /**
       * <code>optional int32 mID = 5;</code>
       */
      public Builder setMID(int value) {
        bitField0_ |= 0x00000010;
        mID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mID = 5;</code>
       */
      public Builder clearMID() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mID_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
    }

    static {
      defaultInstance = new TeecSharedMemory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory)
  }

  public interface TeecSharedMemoryReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    boolean hasParent();
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    TeecSharedMemory getParent();
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    TeecSharedMemoryOrBuilder getParentOrBuilder();

    /**
     * <code>required int32 mOffset = 2;</code>
     */
    boolean hasMOffset();
    /**
     * <code>required int32 mOffset = 2;</code>
     */
    int getMOffset();

    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag mFlag = 3;</code>
     */
    boolean hasMFlag();
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag mFlag = 3;</code>
     */
    TeecSharedMemoryReference.Flag getMFlag();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference}
   */
  public static final class TeecSharedMemoryReference extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
      TeecSharedMemoryReferenceOrBuilder {
    // Use TeecSharedMemoryReference.newBuilder() to construct.
    private TeecSharedMemoryReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecSharedMemoryReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecSharedMemoryReference defaultInstance;
    public static TeecSharedMemoryReference getDefaultInstance() {
      return defaultInstance;
    }

    public TeecSharedMemoryReference getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecSharedMemoryReference(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              TeecSharedMemory.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = parent_.toBuilder();
              }
              parent_ = input.readMessage(TeecSharedMemory.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parent_);
                parent_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mOffset_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              Flag value = Flag.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                mFlag_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecSharedMemoryReference.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecSharedMemoryReference> PARSER =
        new com.google.protobuf.AbstractParser<TeecSharedMemoryReference>() {
      public TeecSharedMemoryReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecSharedMemoryReference(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecSharedMemoryReference> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag}
     */
    public enum Flag
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TEEC_MEMREF_INPUT = 13;</code>
       */
      TEEC_MEMREF_INPUT(0, 13),
      /**
       * <code>TEEC_MEMREF_OUTPUT = 14;</code>
       */
      TEEC_MEMREF_OUTPUT(1, 14),
      /**
       * <code>TEEC_MEMREF_INOUT = 15;</code>
       */
      TEEC_MEMREF_INOUT(2, 15),
      ;

      /**
       * <code>TEEC_MEMREF_INPUT = 13;</code>
       */
      public static final int TEEC_MEMREF_INPUT_VALUE = 13;
      /**
       * <code>TEEC_MEMREF_OUTPUT = 14;</code>
       */
      public static final int TEEC_MEMREF_OUTPUT_VALUE = 14;
      /**
       * <code>TEEC_MEMREF_INOUT = 15;</code>
       */
      public static final int TEEC_MEMREF_INOUT_VALUE = 15;


      public final int getNumber() { return value; }

      public static Flag valueOf(int value) {
        switch (value) {
          case 13: return TEEC_MEMREF_INPUT;
          case 14: return TEEC_MEMREF_OUTPUT;
          case 15: return TEEC_MEMREF_INOUT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Flag>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Flag>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Flag>() {
              public Flag findValueByNumber(int number) {
                return Flag.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return TeecSharedMemoryReference.getDescriptor().getEnumTypes().get(0);
      }

      private static final Flag[] VALUES = values();

      public static Flag valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Flag(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag)
    }

    private int bitField0_;
    public static final int PARENT_FIELD_NUMBER = 1;
    private TeecSharedMemory parent_;
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    public boolean hasParent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    public TeecSharedMemory getParent() {
      return parent_;
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
     */
    public TeecSharedMemoryOrBuilder getParentOrBuilder() {
      return parent_;
    }

    public static final int MOFFSET_FIELD_NUMBER = 2;
    private int mOffset_;
    /**
     * <code>required int32 mOffset = 2;</code>
     */
    public boolean hasMOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 mOffset = 2;</code>
     */
    public int getMOffset() {
      return mOffset_;
    }

    public static final int MFLAG_FIELD_NUMBER = 3;
    private Flag mFlag_;
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag mFlag = 3;</code>
     */
    public boolean hasMFlag() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag mFlag = 3;</code>
     */
    public Flag getMFlag() {
      return mFlag_;
    }

    private void initFields() {
      parent_ = TeecSharedMemory.getDefaultInstance();
      mOffset_ = 0;
      mFlag_ = Flag.TEEC_MEMREF_INPUT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasParent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getParent().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, parent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, mOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, mFlag_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, parent_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mFlag_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecSharedMemoryReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemoryReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemoryReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecSharedMemoryReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecSharedMemoryReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemoryReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecSharedMemoryReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecSharedMemoryReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecSharedMemoryReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecSharedMemoryReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecSharedMemoryReference prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
        TeecSharedMemoryReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecSharedMemoryReference.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecSharedMemoryReference.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (parentBuilder_ == null) {
          parent_ = TeecSharedMemory.getDefaultInstance();
        } else {
          parentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        mOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mFlag_ = Flag.TEEC_MEMREF_INPUT;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor;
      }

      public TeecSharedMemoryReference getDefaultInstanceForType() {
        return TeecSharedMemoryReference.getDefaultInstance();
      }

      public TeecSharedMemoryReference build() {
        TeecSharedMemoryReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecSharedMemoryReference buildPartial() {
        TeecSharedMemoryReference result = new TeecSharedMemoryReference(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (parentBuilder_ == null) {
          result.parent_ = parent_;
        } else {
          result.parent_ = parentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mOffset_ = mOffset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mFlag_ = mFlag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecSharedMemoryReference) {
          return mergeFrom((TeecSharedMemoryReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecSharedMemoryReference other) {
        if (other == TeecSharedMemoryReference.getDefaultInstance()) return this;
        if (other.hasParent()) {
          mergeParent(other.getParent());
        }
        if (other.hasMOffset()) {
          setMOffset(other.getMOffset());
        }
        if (other.hasMFlag()) {
          setMFlag(other.getMFlag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasParent()) {
          
          return false;
        }
        if (!hasMOffset()) {
          
          return false;
        }
        if (!hasMFlag()) {
          
          return false;
        }
        if (!getParent().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecSharedMemoryReference parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecSharedMemoryReference) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private TeecSharedMemory parent_ = TeecSharedMemory.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder> parentBuilder_;
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public boolean hasParent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public TeecSharedMemory getParent() {
        if (parentBuilder_ == null) {
          return parent_;
        } else {
          return parentBuilder_.getMessage();
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public Builder setParent(TeecSharedMemory value) {
        if (parentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parent_ = value;
          onChanged();
        } else {
          parentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public Builder setParent(
          TeecSharedMemory.Builder builderForValue) {
        if (parentBuilder_ == null) {
          parent_ = builderForValue.build();
          onChanged();
        } else {
          parentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public Builder mergeParent(TeecSharedMemory value) {
        if (parentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              parent_ != TeecSharedMemory.getDefaultInstance()) {
            parent_ =
              TeecSharedMemory.newBuilder(parent_).mergeFrom(value).buildPartial();
          } else {
            parent_ = value;
          }
          onChanged();
        } else {
          parentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public Builder clearParent() {
        if (parentBuilder_ == null) {
          parent_ = TeecSharedMemory.getDefaultInstance();
          onChanged();
        } else {
          parentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public TeecSharedMemory.Builder getParentBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getParentFieldBuilder().getBuilder();
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      public TeecSharedMemoryOrBuilder getParentOrBuilder() {
        if (parentBuilder_ != null) {
          return parentBuilder_.getMessageOrBuilder();
        } else {
          return parent_;
        }
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemory parent = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder>
          getParentFieldBuilder() {
        if (parentBuilder_ == null) {
          parentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              TeecSharedMemory, TeecSharedMemory.Builder, TeecSharedMemoryOrBuilder>(
                  getParent(),
                  getParentForChildren(),
                  isClean());
          parent_ = null;
        }
        return parentBuilder_;
      }

      private int mOffset_ ;
      /**
       * <code>required int32 mOffset = 2;</code>
       */
      public boolean hasMOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 mOffset = 2;</code>
       */
      public int getMOffset() {
        return mOffset_;
      }
      /**
       * <code>required int32 mOffset = 2;</code>
       */
      public Builder setMOffset(int value) {
        bitField0_ |= 0x00000002;
        mOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mOffset = 2;</code>
       */
      public Builder clearMOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mOffset_ = 0;
        onChanged();
        return this;
      }

      private Flag mFlag_ = Flag.TEEC_MEMREF_INPUT;
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag mFlag = 3;</code>
       */
      public boolean hasMFlag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag mFlag = 3;</code>
       */
      public Flag getMFlag() {
        return mFlag_;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag mFlag = 3;</code>
       */
      public Builder setMFlag(Flag value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        mFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference.Flag mFlag = 3;</code>
       */
      public Builder clearMFlag() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mFlag_ = Flag.TEEC_MEMREF_INPUT;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
    }

    static {
      defaultInstance = new TeecSharedMemoryReference(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecSharedMemoryReference)
  }

  public interface TeecValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 a = 1;</code>
     */
    boolean hasA();
    /**
     * <code>required int32 a = 1;</code>
     */
    int getA();

    /**
     * <code>required int32 b = 2;</code>
     */
    boolean hasB();
    /**
     * <code>required int32 b = 2;</code>
     */
    int getB();

    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag mFlag = 3;</code>
     */
    boolean hasMFlag();
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag mFlag = 3;</code>
     */
    TeecValue.Flag getMFlag();
  }
  /**
   * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue}
   */
  public static final class TeecValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
      TeecValueOrBuilder {
    // Use TeecValue.newBuilder() to construct.
    private TeecValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeecValue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeecValue defaultInstance;
    public static TeecValue getDefaultInstance() {
      return defaultInstance;
    }

    public TeecValue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeecValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              a_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              b_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              Flag value = Flag.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                mFlag_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TeecValue.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TeecValue> PARSER =
        new com.google.protobuf.AbstractParser<TeecValue>() {
      public TeecValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeecValue(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TeecValue> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag}
     */
    public enum Flag
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TEEC_VALUE_INPUT = 1;</code>
       */
      TEEC_VALUE_INPUT(0, 1),
      /**
       * <code>TEEC_VALUE_OUTPUT = 2;</code>
       */
      TEEC_VALUE_OUTPUT(1, 2),
      /**
       * <code>TEEC_VALUE_INOUT = 3;</code>
       */
      TEEC_VALUE_INOUT(2, 3),
      ;

      /**
       * <code>TEEC_VALUE_INPUT = 1;</code>
       */
      public static final int TEEC_VALUE_INPUT_VALUE = 1;
      /**
       * <code>TEEC_VALUE_OUTPUT = 2;</code>
       */
      public static final int TEEC_VALUE_OUTPUT_VALUE = 2;
      /**
       * <code>TEEC_VALUE_INOUT = 3;</code>
       */
      public static final int TEEC_VALUE_INOUT_VALUE = 3;


      public final int getNumber() { return value; }

      public static Flag valueOf(int value) {
        switch (value) {
          case 1: return TEEC_VALUE_INPUT;
          case 2: return TEEC_VALUE_OUTPUT;
          case 3: return TEEC_VALUE_INOUT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Flag>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Flag>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Flag>() {
              public Flag findValueByNumber(int number) {
                return Flag.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return TeecValue.getDescriptor().getEnumTypes().get(0);
      }

      private static final Flag[] VALUES = values();

      public static Flag valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Flag(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag)
    }

    private int bitField0_;
    public static final int A_FIELD_NUMBER = 1;
    private int a_;
    /**
     * <code>required int32 a = 1;</code>
     */
    public boolean hasA() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 a = 1;</code>
     */
    public int getA() {
      return a_;
    }

    public static final int B_FIELD_NUMBER = 2;
    private int b_;
    /**
     * <code>required int32 b = 2;</code>
     */
    public boolean hasB() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 b = 2;</code>
     */
    public int getB() {
      return b_;
    }

    public static final int MFLAG_FIELD_NUMBER = 3;
    private Flag mFlag_;
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag mFlag = 3;</code>
     */
    public boolean hasMFlag() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag mFlag = 3;</code>
     */
    public Flag getMFlag() {
      return mFlag_;
    }

    private void initFields() {
      a_ = 0;
      b_ = 0;
      mFlag_ = Flag.TEEC_VALUE_INPUT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasA()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, a_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, b_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, mFlag_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, a_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, b_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mFlag_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TeecValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TeecValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TeecValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TeecValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TeecValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TeecValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TeecValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TeecValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
        TeecValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TeecValue.class, Builder.class);
      }

      // Construct using fi.aalto.ssg.opentee.imps.pbdatatypes.GPDataTypes.TeecValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        a_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        b_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mFlag_ = Flag.TEEC_VALUE_INPUT;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GPDataTypes.internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor;
      }

      public TeecValue getDefaultInstanceForType() {
        return TeecValue.getDefaultInstance();
      }

      public TeecValue build() {
        TeecValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TeecValue buildPartial() {
        TeecValue result = new TeecValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.a_ = a_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.b_ = b_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mFlag_ = mFlag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TeecValue) {
          return mergeFrom((TeecValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TeecValue other) {
        if (other == TeecValue.getDefaultInstance()) return this;
        if (other.hasA()) {
          setA(other.getA());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        if (other.hasMFlag()) {
          setMFlag(other.getMFlag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasA()) {
          
          return false;
        }
        if (!hasB()) {
          
          return false;
        }
        if (!hasMFlag()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TeecValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TeecValue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int a_ ;
      /**
       * <code>required int32 a = 1;</code>
       */
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 a = 1;</code>
       */
      public int getA() {
        return a_;
      }
      /**
       * <code>required int32 a = 1;</code>
       */
      public Builder setA(int value) {
        bitField0_ |= 0x00000001;
        a_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 a = 1;</code>
       */
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        a_ = 0;
        onChanged();
        return this;
      }

      private int b_ ;
      /**
       * <code>required int32 b = 2;</code>
       */
      public boolean hasB() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 b = 2;</code>
       */
      public int getB() {
        return b_;
      }
      /**
       * <code>required int32 b = 2;</code>
       */
      public Builder setB(int value) {
        bitField0_ |= 0x00000002;
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 b = 2;</code>
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = 0;
        onChanged();
        return this;
      }

      private Flag mFlag_ = Flag.TEEC_VALUE_INPUT;
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag mFlag = 3;</code>
       */
      public boolean hasMFlag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag mFlag = 3;</code>
       */
      public Flag getMFlag() {
        return mFlag_;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag mFlag = 3;</code>
       */
      public Builder setMFlag(Flag value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        mFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue.Flag mFlag = 3;</code>
       */
      public Builder clearMFlag() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mFlag_ = Flag.TEEC_VALUE_INPUT;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
    }

    static {
      defaultInstance = new TeecValue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fi.aalto.ssg.opentee.imps.pbdatatypes.TeecValue)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021GPDataTypes.proto\022%fi.aalto.ssg.opente" +
      "e.imps.pbdatatypes\"h\n\rTeecOperation\022\020\n\010m" +
      "Started\030\001 \002(\005\022E\n\007mParams\030\002 \003(\01324.fi.aalt" +
      "o.ssg.opentee.imps.pbdatatypes.TeecParam" +
      "eter\"\274\002\n\rTeecParameter\022G\n\004type\030\001 \002(\01629.f" +
      "i.aalto.ssg.opentee.imps.pbdatatypes.Tee" +
      "cParameter.Type\022c\n\031teecSharedMemoryRefer" +
      "ence\030\002 \001(\0132@.fi.aalto.ssg.opentee.imps.p" +
      "bdatatypes.TeecSharedMemoryReference\022C\n\t" +
      "teecValue\030\003 \001(\01320.fi.aalto.ssg.opentee.i",
      "mps.pbdatatypes.TeecValue\022\023\n\013placeHolder" +
      "\030\004 \001(\005\"#\n\004Type\022\007\n\003smr\020\001\022\007\n\003val\020\002\022\t\n\005empt" +
      "y\020\003\"b\n\020TeecSharedMemory\022\017\n\007mBuffer\030\001 \002(\014" +
      "\022\r\n\005mFlag\030\002 \002(\005\022\014\n\004size\030\003 \002(\005\022\023\n\013mReturn" +
      "Size\030\004 \001(\005\022\013\n\003mID\030\005 \001(\005\"\231\002\n\031TeecSharedMe" +
      "moryReference\022G\n\006parent\030\001 \002(\01327.fi.aalto" +
      ".ssg.opentee.imps.pbdatatypes.TeecShared" +
      "Memory\022\017\n\007mOffset\030\002 \002(\005\022T\n\005mFlag\030\003 \002(\0162E" +
      ".fi.aalto.ssg.opentee.imps.pbdatatypes.T" +
      "eecSharedMemoryReference.Flag\"L\n\004Flag\022\025\n",
      "\021TEEC_MEMREF_INPUT\020\r\022\026\n\022TEEC_MEMREF_OUTP" +
      "UT\020\016\022\025\n\021TEEC_MEMREF_INOUT\020\017\"\262\001\n\tTeecValu" +
      "e\022\t\n\001a\030\001 \002(\005\022\t\n\001b\030\002 \002(\005\022D\n\005mFlag\030\003 \002(\01625" +
      ".fi.aalto.ssg.opentee.imps.pbdatatypes.T" +
      "eecValue.Flag\"I\n\004Flag\022\024\n\020TEEC_VALUE_INPU" +
      "T\020\001\022\025\n\021TEEC_VALUE_OUTPUT\020\002\022\024\n\020TEEC_VALUE" +
      "_INOUT\020\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecOperation_descriptor,
        new String[] { "MStarted", "MParams", });
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecParameter_descriptor,
        new String[] { "Type", "TeecSharedMemoryReference", "TeecValue", "PlaceHolder", });
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemory_descriptor,
        new String[] { "MBuffer", "MFlag", "Size", "MReturnSize", "MID", });
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecSharedMemoryReference_descriptor,
        new String[] { "Parent", "MOffset", "MFlag", });
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_fi_aalto_ssg_opentee_imps_pbdatatypes_TeecValue_descriptor,
        new String[] { "A", "B", "MFlag", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
